{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/interaction/ports","result":{"data":{"site":{"siteMetadata":{"title":"X6","examples":[{"slug":"shape","icon":"shape","title":{"zh":"元素","en":"Shape"}},{"slug":"interaction","icon":"interaction","title":{"zh":"交互","en":"Interaction"}},{"slug":"net","icon":"net","title":{"zh":"一般图","en":"General Graph"}},{"slug":"tree","icon":"tree","title":{"zh":"树图","en":"Tree Graph"}},{"slug":"animation","icon":"scatter","title":{"zh":"动画","en":"Animation"}},{"slug":"tool","icon":"tool","title":{"zh":"组件","en":"Component"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/updateEdge"},"frontmatter":{"title":"Update Edge","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/updateEdge/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/updateEdge"},"frontmatter":{"title":"动态更新边","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/updateEdge/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/nodes"},"frontmatter":{"title":"Built-in Node","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"shape/nodes/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/nodes"},"frontmatter":{"title":"内置节点","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"shape/nodes/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tool/scroller"},"frontmatter":{"title":"Scroller","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tool/scroller/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tool/scroller"},"frontmatter":{"title":"滚动画布","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tool/scroller/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap"},"frontmatter":{"title":"MindMap","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tree/mindmap/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap"},"frontmatter":{"title":"脑图树","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tree/mindmap/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/embeding"},"frontmatter":{"title":"Embeding","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/embeding/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/embeding"},"frontmatter":{"title":"节点嵌入","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/embeding/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/edges"},"frontmatter":{"title":"Built-in Edge","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edges/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/edges"},"frontmatter":{"title":"内置边","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edges/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tool/snapline"},"frontmatter":{"title":"Snapline","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tool/snapline/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tool/snapline"},"frontmatter":{"title":"对齐线","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tool/snapline/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/expand"},"frontmatter":{"title":"Expand And Fold","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/expand/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/expand"},"frontmatter":{"title":"展开与收起","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/expand/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/marker"},"frontmatter":{"title":"Built-in Marker","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"shape/marker/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/marker"},"frontmatter":{"title":"内置箭头","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"shape/marker/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/ports"},"frontmatter":{"title":"Port Interaction","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/ports/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/ports"},"frontmatter":{"title":"连接桩交互","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/ports/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/connector"},"frontmatter":{"title":"Connector","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"shape/connector/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/connector"},"frontmatter":{"title":"连线","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"shape/connector/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/router"},"frontmatter":{"title":"Router","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"shape/router/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/router"},"frontmatter":{"title":"路由","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"shape/router/index.zh.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"interaction/embeding/demo/embed.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/embeding/demo/embed.ts","order":0,"filename":"embed.ts","title":{"zh":"节点嵌入","en":"Node Embending"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Tq6WQJFB9KUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Embeding","order":202},"zh":{"title":"节点嵌入","order":202}}},{"relativePath":"interaction/expand/demo/expand.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/expand/demo/expand.ts","order":0,"filename":"expand.ts","title":{"zh":"展开与收起","en":"Expand And Fold"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*gAXiQbep7-EAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Expand And Fold","order":203},"zh":{"title":"展开与收起","order":203}}},{"relativePath":"interaction/ports/demo/validateConnection.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/ports/demo/validateConnection.ts","order":0,"filename":"validateConnection.ts","title":{"zh":"验证连接","en":"Validate Connection"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*USDYR65eJCMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Port Interaction","order":204},"zh":{"title":"连接桩交互","order":204}}},{"relativePath":"interaction/updateEdge/demo/multi.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/updateEdge/demo/multi.ts","order":0,"filename":"multi.ts","title":{"zh":"动态设置顶点","en":"Dynamic Vertex"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*dCo7Q5sgv-cAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Update Edge","order":201},"zh":{"title":"动态更新边","order":201}}},{"relativePath":"shape/connector/demo/jumpover.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/jumpover.ts","order":3,"filename":"jumpover.ts","title":{"zh":"跳线","en":"JumpOver Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Gbu3R5fVQC4AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/normal.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"正常连线","en":"Normal Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*HwCJRawjuCAAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/rounded.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/rounded.ts","order":2,"filename":"rounded.ts","title":{"zh":"圆角连线","en":"Rounded Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Xre2RYCzIiUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/wobble.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/wobble.ts","order":4,"filename":"wobble.ts","title":{"zh":"自定义连线","en":"Custom Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*zrRTSbn-uD0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/smooth.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/smooth.ts","order":1,"filename":"smooth.ts","title":{"zh":"平滑连线","en":"Smooth Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*x4k3So2KAtwAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/edges/demo/edge.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/edges/demo/edge.ts","order":0,"filename":"edge.ts","title":{"zh":"默认边","en":"Default Edge"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Z-LXQKuFXxwAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Edge","order":102},"zh":{"title":"内置边","order":102}}},{"relativePath":"shape/marker/demo/marker.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/marker/demo/marker.ts","order":0,"filename":"marker.ts","title":{"zh":"基础箭头","en":"Basic Marker"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*nGtbTYeXGgUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Marker","order":103},"zh":{"title":"内置箭头","order":103}}},{"relativePath":"shape/nodes/demo/circle.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/circle.ts","order":2,"filename":"circle.ts","title":{"zh":"圆形","en":"Circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*pffdSKADueQAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Node","order":101},"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/ellipse.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/ellipse.ts","order":1,"filename":"ellipse.ts","title":{"zh":"椭圆","en":"Ellipse"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*xzAvR6eQe6sAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Node","order":101},"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/html.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/html.ts","order":4,"filename":"html.ts","title":{"zh":"HTML","en":"HTML"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*9RRESpvzfMIAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Node","order":101},"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/image.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/image.ts","order":3,"filename":"image.ts","title":{"zh":"图片","en":"Image"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*YmP5Q5fww5cAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Node","order":101},"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/rect.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/rect.ts","order":0,"filename":"rect.ts","title":{"zh":"矩形","en":"Rectangle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*3rFwR6gDxSMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Node","order":101},"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/router/demo/customRouter.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/customRouter.ts","order":6,"filename":"customRouter.ts","title":{"zh":"随机路由","en":"Random Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*L3C-TrM4lG0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"shape/router/demo/er.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/er.ts","order":5,"filename":"er.ts","title":{"zh":"ER路由","en":"ER Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*iE8MS6-xgZMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"shape/router/demo/manhattan.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/manhattan.ts","order":3,"filename":"manhattan.ts","title":{"zh":"曼哈顿路由","en":"Manhattan Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*FXGRQ5RmLyMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"shape/router/demo/oneSide.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/oneSide.ts","order":2,"filename":"oneSide.ts","title":{"zh":"OneSide","en":"OneSide Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*622fTp6J8twAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"shape/router/demo/orth.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/orth.ts","order":1,"filename":"orth.ts","title":{"zh":"正交路由","en":"Orth Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*2fRdRaP2JBUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"shape/router/demo/metro.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/metro.ts","order":4,"filename":"metro.ts","title":{"zh":"铁路路由","en":"Metro Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*ABPIT5s-yh4AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"shape/router/demo/normal.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"默认路由","en":"Normal Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*KdkFTJ-sP6YAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Router","order":105},"zh":{"title":"路由","order":105}}},{"relativePath":"tool/scroller/demo/scroller.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tool/scroller/demo/scroller.ts","order":0,"filename":"scroller.ts","title":{"zh":"滚动画布","en":"Scroller"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*l_BLQJiDIYkAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Scroller","order":601},"zh":{"title":"滚动画布","order":601}}},{"relativePath":"tool/snapline/demo/snapline.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tool/snapline/demo/snapline.ts","order":0,"filename":"snapline.ts","title":{"zh":"对齐线","en":"Snapline"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*cmi1SJ112qIAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Snapline","order":602},"zh":{"title":"对齐线","order":602}}},{"relativePath":"tree/mindmap/demo/tree.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tree/mindmap/demo/tree.ts","order":0,"filename":"tree.ts","title":{"zh":"脑图树","en":"Mindmap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*bZ3tTITjafsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"MindMap","order":401},"zh":{"title":"脑图树","order":401}}}],"exampleSections":{"examples":[{"relativePath":"interaction/ports/demo/validateConnection.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/ports/demo/validateConnection.ts","order":0,"filename":"validateConnection.ts","title":{"zh":"验证连接","en":"Validate Connection"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*USDYR65eJCMAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Edge, Shape, NodeView } from '@antv/x6'\n\nclass MyShape extends Shape.Rect {\n  getInPorts() {\n    return this.getPortsByGroup('in')\n  }\n\n  getOutPorts() {\n    return this.getPortsByGroup('out')\n  }\n\n  getUsedInPorts(graph: Graph) {\n    const incomingEdges = graph.getIncomingEdges(this) || []\n    return incomingEdges.map((edge: Edge) => {\n      const portId = edge.getTargetPortId()\n      return this.getPort(portId!)\n    })\n  }\n\n  getNewInPorts(length: number) {\n    return Array.from({ length }, () => {\n      return { group: 'in' }\n    })\n  }\n\n  updateInPorts(graph: Graph) {\n    var minNumberOfPorts = 2\n    var ports = this.getInPorts()\n    var usedPorts = this.getUsedInPorts(graph)\n    var newPorts = this.getNewInPorts(\n      Math.max(minNumberOfPorts - usedPorts.length, 1),\n    )\n\n    if (\n      ports.length === minNumberOfPorts &&\n      ports.length - usedPorts.length > 0\n    ) {\n      // noop\n    } else if (ports.length === usedPorts.length) {\n      this.addPorts(newPorts)\n    } else if (ports.length + 1 > usedPorts.length) {\n      this.prop(\n        ['ports', 'items'],\n        this.getOutPorts().concat(usedPorts).concat(newPorts),\n        { rewrite: true },\n      )\n    }\n\n    return this\n  }\n}\n\nMyShape.config({\n  attrs: {\n    root: {\n      magnet: false,\n    },\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n  },\n  ports: {\n    items: [{ group: 'out' }],\n    groups: {\n      in: {\n        position: { name: 'top' },\n        attrs: {\n          portBody: {\n            magnet: 'passive',\n            r: 12,\n            cy: -4,\n            fill: '#b37feb',\n            stroke: '#9254de',\n          },\n        },\n        z: 0,\n      },\n      out: {\n        position: { name: 'bottom' },\n        attrs: {\n          portBody: {\n            magnet: 'active',\n            r: 12,\n            cy: 4,\n            fill: '#69c0ff',\n            stroke: '#40a9ff',\n          },\n        },\n        z: 0,\n      },\n    },\n  },\n  portMarkup: [\n    {\n      tagName: 'circle',\n      selector: 'portBody',\n    },\n  ],\n})\n\nconst magnetAvailabilityHighlighter = {\n  name: 'stroke',\n  args: {\n    padding: 6,\n    attrs: {\n      strokeWidth: 3,\n      stroke: '#ff0000',\n    },\n  },\n}\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  highlighting: {\n    magnetAvailable: magnetAvailabilityHighlighter,\n  },\n  connecting: {\n    snap: true,\n    dangling: false,\n    highlight: true,\n    connector: 'rounded',\n    router: {\n      name: 'er',\n      args: {\n        // direction: 'W',\n      },\n    },\n    connectionPoint: 'boundary',\n    createEdge() {\n      return new Shape.Edge()\n    },\n    validateConnection({ sourceView, targetView, targetMagnet }) {\n      if (!targetMagnet) {\n        return false\n      }\n\n      if (sourceView === targetView) {\n        return false\n      }\n\n      if (targetMagnet.getAttribute('port-group') !== 'in') {\n        return false\n      }\n\n      if (targetView) {\n        const node = targetView.cell\n        if (node instanceof MyShape) {\n          var portId = targetMagnet.getAttribute('port')\n          var usedInPorts = node.getUsedInPorts(graph)\n          if (usedInPorts.find((port) => port && port.id === portId)) {\n            return false\n          }\n        }\n      }\n\n      return true\n    },\n  },\n})\n\ngraph.addNode(\n  new MyShape().resize(120, 100).position(200, 100).updateInPorts(graph),\n)\n\ngraph.addNode(\n  new MyShape().resize(120, 100).position(400, 100).updateInPorts(graph),\n)\n\ngraph.addNode(\n  new MyShape().resize(120, 100).position(300, 400).updateInPorts(graph),\n)\n\nfunction update(view: NodeView) {\n  var cell = view.cell\n  if (cell instanceof MyShape) {\n    cell.getInPorts().forEach((port) => {\n      var portNode = view.findPortElem(port.id!, 'portBody')\n      view.unhighlight(portNode, {\n        highlighter: magnetAvailabilityHighlighter,\n      })\n    })\n    cell.updateInPorts(graph)\n  }\n}\n\ngraph.on('edge:mouseenter', ({ view }) => {\n  view.addTools({\n    tools: [\n      'source-arrowhead',\n      'target-arrowhead',\n      {\n        name: 'button-remove',\n        args: {\n          distance: -30,\n        },\n      },\n    ],\n  })\n})\n\ngraph.on('edge:mouseleave', ({ view }) => {\n  view.removeTools()\n})\n\ngraph.on('edge:connected', ({ previousView, currentView }) => {\n  if (previousView) {\n    update(previousView)\n  }\n  if (currentView) {\n    update(currentView)\n  }\n})\n\ngraph.on('edge:removed', function ({ edge, options }) {\n  if (!options.ui) {\n    return\n  }\n\n  var target = edge.getTargetCell()\n  if (target instanceof MyShape) {\n    target.updateInPorts()\n  }\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.validateConnection = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  var MyShape = /*#__PURE__*/function (_Shape$Rect) {\n    _inherits(MyShape, _Shape$Rect);\n\n    var _super = _createSuper(MyShape);\n\n    function MyShape() {\n      _classCallCheck(this, MyShape);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(MyShape, [{\n      key: \"getInPorts\",\n      value: function getInPorts() {\n        return this.getPortsByGroup('in');\n      }\n    }, {\n      key: \"getOutPorts\",\n      value: function getOutPorts() {\n        return this.getPortsByGroup('out');\n      }\n    }, {\n      key: \"getUsedInPorts\",\n      value: function getUsedInPorts(graph) {\n        var _this = this;\n\n        var incomingEdges = graph.getIncomingEdges(this) || [];\n        return incomingEdges.map(function (edge) {\n          var portId = edge.getTargetPortId();\n          return _this.getPort(portId);\n        });\n      }\n    }, {\n      key: \"getNewInPorts\",\n      value: function getNewInPorts(length) {\n        return Array.from({\n          length: length\n        }, function () {\n          return {\n            group: 'in'\n          };\n        });\n      }\n    }, {\n      key: \"updateInPorts\",\n      value: function updateInPorts(graph) {\n        var minNumberOfPorts = 2;\n        var ports = this.getInPorts();\n        var usedPorts = this.getUsedInPorts(graph);\n        var newPorts = this.getNewInPorts(Math.max(minNumberOfPorts - usedPorts.length, 1));\n\n        if (ports.length === minNumberOfPorts && ports.length - usedPorts.length > 0) {// noop\n        } else if (ports.length === usedPorts.length) {\n          this.addPorts(newPorts);\n        } else if (ports.length + 1 > usedPorts.length) {\n          this.prop(['ports', 'items'], this.getOutPorts().concat(usedPorts).concat(newPorts), {\n            rewrite: true\n          });\n        }\n\n        return this;\n      }\n    }]);\n\n    return MyShape;\n  }(_x.Shape.Rect);\n\n  MyShape.config({\n    attrs: {\n      root: {\n        magnet: false\n      },\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      }\n    },\n    ports: {\n      items: [{\n        group: 'out'\n      }],\n      groups: {\n        in: {\n          position: {\n            name: 'top'\n          },\n          attrs: {\n            portBody: {\n              magnet: 'passive',\n              r: 12,\n              cy: -4,\n              fill: '#b37feb',\n              stroke: '#9254de'\n            }\n          },\n          z: 0\n        },\n        out: {\n          position: {\n            name: 'bottom'\n          },\n          attrs: {\n            portBody: {\n              magnet: 'active',\n              r: 12,\n              cy: 4,\n              fill: '#69c0ff',\n              stroke: '#40a9ff'\n            }\n          },\n          z: 0\n        }\n      }\n    },\n    portMarkup: [{\n      tagName: 'circle',\n      selector: 'portBody'\n    }]\n  });\n  var magnetAvailabilityHighlighter = {\n    name: 'stroke',\n    args: {\n      padding: 6,\n      attrs: {\n        strokeWidth: 3,\n        stroke: '#ff0000'\n      }\n    }\n  };\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    highlighting: {\n      magnetAvailable: magnetAvailabilityHighlighter\n    },\n    connecting: {\n      snap: true,\n      dangling: false,\n      highlight: true,\n      connector: 'rounded',\n      router: {\n        name: 'er',\n        args: {// direction: 'W',\n        }\n      },\n      connectionPoint: 'boundary',\n      createEdge: function createEdge() {\n        return new _x.Shape.Edge();\n      },\n      validateConnection: function validateConnection(_ref) {\n        var sourceView = _ref.sourceView,\n            targetView = _ref.targetView,\n            targetMagnet = _ref.targetMagnet;\n\n        if (!targetMagnet) {\n          return false;\n        }\n\n        if (sourceView === targetView) {\n          return false;\n        }\n\n        if (targetMagnet.getAttribute('port-group') !== 'in') {\n          return false;\n        }\n\n        if (targetView) {\n          var node = targetView.cell;\n\n          if (_instanceof(node, MyShape)) {\n            var portId = targetMagnet.getAttribute('port');\n            var usedInPorts = node.getUsedInPorts(graph);\n\n            if (usedInPorts.find(function (port) {\n              return port && port.id === portId;\n            })) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n    }\n  });\n  graph.addNode(new MyShape().resize(120, 100).position(200, 100).updateInPorts(graph));\n  graph.addNode(new MyShape().resize(120, 100).position(400, 100).updateInPorts(graph));\n  graph.addNode(new MyShape().resize(120, 100).position(300, 400).updateInPorts(graph));\n\n  function update(view) {\n    var cell = view.cell;\n\n    if (_instanceof(cell, MyShape)) {\n      cell.getInPorts().forEach(function (port) {\n        var portNode = view.findPortElem(port.id, 'portBody');\n        view.unhighlight(portNode, {\n          highlighter: magnetAvailabilityHighlighter\n        });\n      });\n      cell.updateInPorts(graph);\n    }\n  }\n\n  graph.on('edge:mouseenter', function (_ref2) {\n    var view = _ref2.view;\n    view.addTools({\n      tools: ['source-arrowhead', 'target-arrowhead', {\n        name: 'button-remove',\n        args: {\n          distance: -30\n        }\n      }]\n    });\n  });\n  graph.on('edge:mouseleave', function (_ref3) {\n    var view = _ref3.view;\n    view.removeTools();\n  });\n  graph.on('edge:connected', function (_ref4) {\n    var previousView = _ref4.previousView,\n        currentView = _ref4.currentView;\n\n    if (previousView) {\n      update(previousView);\n    }\n\n    if (currentView) {\n      update(currentView);\n    }\n  });\n  graph.on('edge:removed', function (_ref5) {\n    var edge = _ref5.edge,\n        options = _ref5.options;\n\n    if (!options.ui) {\n      return;\n    }\n\n    var target = edge.getTargetCell();\n\n    if (_instanceof(target, MyShape)) {\n      target.updateInPorts();\n    }\n  });\n});"}]},"description":""}},"staticQueryHashes":["1015175297","3000541721","3000541721","3378097331","638047554"]}