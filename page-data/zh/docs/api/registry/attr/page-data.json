{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/api/registry/attr","result":{"data":{"site":{"siteMetadata":{"title":"X6","githubUrl":"https://github.com/antvis/x6/tree/master/sites/x6-sites","docs":[{"slug":"tutorial/basic","title":{"zh":"基础教程","en":"Basic"},"order":2},{"slug":"tutorial/intermediate","title":{"zh":"进阶实践","en":"Intermediate"},"order":3},{"slug":"tutorial/advanced","title":{"zh":"高级指引","en":"Advanced"},"order":4},{"slug":"tutorial/faq","title":{"zh":"常见问题","en":"FQA"},"order":5},{"slug":"api/model","title":{"zh":"Model","en":"Model"},"order":3},{"slug":"api/view","title":{"zh":"View","en":"View"},"order":5},{"slug":"api/registry","title":{"zh":"Registry","en":"Registry"},"order":7},{"slug":"api/ui","title":{"zh":"UI Components","en":"UI Components"},"order":8}]},"pathPrefix":""},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attr"}]},{"type":"text","value":" 命名空间中提供了注册和管理特殊属性的方法，以及所有特殊属性的定义。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"presets","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#presets","ariaLabel":"presets permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"presets"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Registry.Attr.presets"}]},{"type":"text","value":" 命名空间下挂载了所有特殊属性的定义。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"ref","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ref","ariaLabel":"ref permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"ref"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"指向一个元素的 CSS 选择器，指代的元素是那些以 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]},{"type":"text","value":" 开头的属性的参照元素。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refx","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refx","ariaLabel":"refx permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refX"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的左上角 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标（参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"）时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标相对于参照元素宽度百分比的相对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refX: 0.5"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标基础上，向右偏移参照宽度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标的绝对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refX: 20"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标基础上，向右偏移 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refx2","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refx2","ariaLabel":"refx2 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refX2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与 "},{"type":"element","tagName":"a","properties":{"href":"#refx"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refX"}]}]},{"type":"text","value":" 一样，当需要同时指定相对偏移量和绝对偏移量时使用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  refX"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'50%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  refX2"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面代码表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标的基础上，向右偏移参照元素宽度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":" 并加上 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refy","ariaLabel":"refy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refY"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的左上角 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标（参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"）时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标相对于参照元素高度百分比的相对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refY: 0.5"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标基础上，向下偏移参照高度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标的绝对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refY: 20"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标基础上，向下偏移 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refy2","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refy2","ariaLabel":"refy2 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refY2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与 "},{"type":"element","tagName":"a","properties":{"href":"#refy"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refY"}]}]},{"type":"text","value":" 一样，当需要同时指定相对偏移量和绝对偏移量时使用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  refY"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'50%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  refY2"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面代码表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标的基础上，向下偏移参照元素高度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":" 并加上 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refdx","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refdx","ariaLabel":"refdx permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refDx"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的右下角 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标（参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"）时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标相对于参照元素宽度百分比的相对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refDx: 0.5"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标基础上，向右偏移参照宽度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标的绝对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refDx: 20"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标基础上，向右偏移 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refdy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refdy","ariaLabel":"refdy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refDy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的右下角 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标（参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"）时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标相对于参照元素高度百分比的相对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refDy: 0.5"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标基础上，向下偏移参照高度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标是参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标的绝对偏移量。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refDy: 20"}]},{"type":"text","value":" 表示，目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在参照 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标基础上，向下偏移 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refwidth","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refwidth","ariaLabel":"refwidth permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refWidth"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素宽度，宽度计算相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的宽度（参照宽度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示元素的宽度是参照宽度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refWidth: 0.75"}]},{"type":"text","value":" 表示元素的宽度是参照宽度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示元素的宽度在参照宽度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refWidth: 20"}]},{"type":"text","value":" 表示元素比相对元素宽 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持宽度 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"width"}]},{"type":"text","value":" 和高度 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" 的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<rect>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refwidth2","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refwidth2","ariaLabel":"refwidth2 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refWidth2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与 "},{"type":"element","tagName":"a","properties":{"href":"#refwidth"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refWidth"}]}]},{"type":"text","value":" 一样，当需要同时指定绝对宽度和相对宽度时使用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  refWidth"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  refWidth2"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'75%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面代码表示目标宽度是参照宽度 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":" 并加上 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refheight","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refheight","ariaLabel":"refheight permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refHeight"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素高度，高度计算相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的高度（参照高度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示元素的高度是参照高度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refHeight: 0.75"}]},{"type":"text","value":" 表示元素的高度是参照高度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示元素的高度在参照高度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refHeight: 20"}]},{"type":"text","value":" 表示元素比相对元素高 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持宽度 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"width"}]},{"type":"text","value":" 和高度 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" 的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<rect>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refheight2","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refheight2","ariaLabel":"refheight2 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refHeight2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与 "},{"type":"element","tagName":"a","properties":{"href":"#refheight"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refHeight"}]}]},{"type":"text","value":" 一样，当需要同时指定绝对宽度和相对宽度时使用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  refHeight"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  refHeight2"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'75%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面代码表示目标高度是参照高度 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":" 并加上 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refcx","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refcx","ariaLabel":"refcx permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refCx"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素中心 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标，即"},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cx"},"children":[{"type":"text","value":"原生 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cx"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"，目标值计算相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的宽度（参照宽度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cx"}]},{"type":"text","value":" 是参照宽度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refCx: 0.75"}]},{"type":"text","value":" 表示元素中心 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标位于参照宽度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":" 处。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cx"}]},{"type":"text","value":" 是在参照宽度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refCx: 20"}]},{"type":"text","value":" 表示元素中心 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标位于参照宽度加 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":" 处。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cx"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cy"}]},{"type":"text","value":" 属性的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<ellipse>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refcy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refcy","ariaLabel":"refcy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refCy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素中心 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标，即"},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cy"},"children":[{"type":"text","value":"原生 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cy"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"，目标值计算相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的高度（参照高度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cy"}]},{"type":"text","value":" 是参照高度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refCy: 0.75"}]},{"type":"text","value":" 表示元素中心 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标位于参照高度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":" 处。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cy"}]},{"type":"text","value":" 是在参照宽度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refCy: 20"}]},{"type":"text","value":" 表示元素中心 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标位于参照高度加 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":" 处。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cx"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cy"}]},{"type":"text","value":" 属性的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<ellipse>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refrx","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refrx","ariaLabel":"refrx permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refRx"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"，目标值计算相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的宽度（参照宽度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 是参照宽度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRx: 0.75"}]},{"type":"text","value":" 表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 是参照宽度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 是在参照宽度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRx: 20"}]},{"type":"text","value":" 表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 是参照宽度加 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 属性的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<rect>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refry","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refry","ariaLabel":"refry permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refRy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"，目标值计算相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的高度（参照高度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 是参照高度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRy: 0.75"}]},{"type":"text","value":" 表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 是参照高度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 是在参照宽度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRy: 20"}]},{"type":"text","value":" 表示元素的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 是参照高度加 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rx"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ry"}]},{"type":"text","value":" 属性的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<rect>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refrcircumscribed","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refrcircumscribed","ariaLabel":"refrcircumscribed permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refRCircumscribed"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/r"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"，目标值相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"对角线长度"}]},{"type":"text","value":"（参照长度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是参照长度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRCircumscribed: 0.75"}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是参照长度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是在参照长度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRCircumscribed: 20"}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是参照长度加 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 属性的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<rect>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refrinscribed","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refrinscribed","ariaLabel":"refrinscribed permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refRInscribed"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"简称"}]},{"type":"text","value":"："},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refR"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/r"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"，目标值相对于 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"宽高的最小值"}]},{"type":"text","value":"（参照长度）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 之间或为百分比（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"）时，表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是参照长度百分之多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRInscribed: 0.75"}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是参照长度的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"75%"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当其值 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<0"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":">1"}]},{"type":"text","value":" 时，表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是在参照长度的基础上减少或增加多少。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refRInscribed: 20"}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 是参照长度加 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该属性只适用于那些支持 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"r"}]},{"type":"text","value":" 属性的元素，如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<rect>"}]},{"type":"text","value":" 元素。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refdkeepoffset","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refdkeepoffset","ariaLabel":"refdkeepoffset permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refDKeepOffset"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"d"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"。通过缩放原始的 pathData 使目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素的大小与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的大小一样，通过平移原始的 pathData 使目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素的起点坐标与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的起点坐标对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"同时，提供的 pathData 的偏移量将被保留，这意味着如果提供的 pathData 的左上角不在坐标原点 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0, 0"}]},{"type":"text","value":"，当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素被渲染到画布后这个偏移量将被保留。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" Node "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'@antv/x6'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" Path "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" Node"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"define"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  markup"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" tagName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'path'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    path"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n      refDKeepOffset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'M 10 10 30 10 30 30 z'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// path offset is 10,10"}]},{"type":"text","value":"\n      fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n      stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'black'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" container "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getElementById"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'container'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" graph "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Graph"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  container"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"800"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  grid"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" path "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Path"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"resize"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"addTo"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" view "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findView"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"path"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"console"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"log"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findOne"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'path'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getAttribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'d'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 'M 10 10 50 10 50 50 z'"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refdresetoffset","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refdresetoffset","ariaLabel":"refdresetoffset permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refDResetOffset"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"简称"}]},{"type":"text","value":"："},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refD"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"d"}]},{"type":"text","value":" 属性"}]},{"type":"text","value":"。通过缩放原始的 pathData 使目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素的大小与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的大小一样，通过平移原始的 pathData 使目标 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素的起点坐标与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的起点坐标对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"同时，提供的 pathData 的偏移量将被移除，这意味着如果提供的 pathData 的左上角不在坐标原点 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0, 0"}]},{"type":"text","value":"，将同时通过平移使其位于原点，当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素被渲染到画布后将于参照元素严格对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" Node "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'@antv/x6'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" Path "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" Node"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"define"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  markup"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" tagName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'path'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    path"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n      refDResetOffset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'M 10 10 30 10 30 30 z'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// path offset is 10,10"}]},{"type":"text","value":"\n      fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n      stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'black'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" container "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getElementById"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'container'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" graph "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Graph"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  container"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"800"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  grid"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" path "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Path"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"resize"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"addTo"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" view "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findView"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"path"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"console"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"log"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findOne"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'path'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getAttribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'d'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 'M 0 0 40 0 40 40 z'"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"resetoffset","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#resetoffset","ariaLabel":"resetoffset permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"resetOffset"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"resetOffset"}]},{"type":"text","value":" 属性值为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" 时，将平移点阵，使点阵的左上角位于原点。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"path"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  path"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    d"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'M 10 10 20 20'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n    resetOffset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 平移后的 d 属性值为 \"M 0 0 10 10\""}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refpointskeepoffset","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refpointskeepoffset","ariaLabel":"refpointskeepoffset permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refPointsKeepOffset"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<polygon>"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<polyline>"}]},{"type":"text","value":" 元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/points"},"children":[{"type":"text","value":"points 属性"}]},{"type":"text","value":"，通过缩放原始点阵使目标元素的大小与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的大小一样，通过平移原始点阵使目标元素的起点坐标与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的起点坐标对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"同时，点阵的偏移量将被保留，这意味着如果点阵的左上角不在坐标原点 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0, 0"}]},{"type":"text","value":"，当元素被渲染到画布后这个偏移量将被保留。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" Node "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'@antv/x6'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" Polygon "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" Node"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"define"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  markup"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" tagName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'polygon'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    polygon"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n      refPointsKeepOffset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'10,10 30,10 30,30'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// points offset is 10,10"}]},{"type":"text","value":"\n      fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n      stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'black'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" container "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getElementById"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'container'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" graph "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Graph"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  container"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"800"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  grid"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" polygon "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Polygon"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"resize"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"addTo"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" view "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findView"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"polygon"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"console"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"log"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findOne"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'polygon'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getAttribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'points'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// '10,10 50,10 50,50'"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"refpointsresetoffset","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#refpointsresetoffset","ariaLabel":"refpointsresetoffset permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"refPointsResetOffset"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"简称"}]},{"type":"text","value":"："},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refPoints"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<polygon>"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<polyline>"}]},{"type":"text","value":" 元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/points"},"children":[{"type":"text","value":"points 属性"}]},{"type":"text","value":"，通过缩放原始点阵使目标元素的大小与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的大小一样，通过平移原始点阵使目标元素的起点坐标与 "},{"type":"element","tagName":"a","properties":{"href":"#ref"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ref"}]}]},{"type":"text","value":" 指代的参照元素的起点坐标对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"同时，点阵的偏移量将被移除，这意味着如果点阵的左上角不在坐标原点 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0, 0"}]},{"type":"text","value":"，将同时通过平移使其位于原点，当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素被渲染到画布后将于参照元素严格对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" Node "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'@antv/x6'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" Polygon "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" Node"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"define"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  markup"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" tagName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'polygon'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    polygon"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n      refPointsResetOffset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'10,10 30,10 30,30'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// points offset is 10,10"}]},{"type":"text","value":"\n      fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n      stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'black'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" container "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getElementById"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'container'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" graph "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Graph"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  container"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"800"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  grid"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" polygon "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Polygon"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"resize"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"40"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"addTo"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" view "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findView"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"polygon"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"console"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"log"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"findOne"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'polygon'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getAttribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'points'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// '100,0 40,0 40,40'"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xalign","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xalign","ariaLabel":"xalign permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xAlign"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"元素与其 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 坐标在水平方向的对齐方式。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'left'"}]},{"type":"text","value":" 目标元素的左侧与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'middle'"}]},{"type":"text","value":" 目标元素的中心与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'right'"}]},{"type":"text","value":" 目标元素的右侧与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"yalign","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#yalign","ariaLabel":"yalign permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"yAlign"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"元素与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在垂直方向的对齐方式。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'top'"}]},{"type":"text","value":" 目标元素的顶部与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'middle'"}]},{"type":"text","value":" 目标元素的中心与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'bottom'"}]},{"type":"text","value":" 目标元素与的底部与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"iframe","properties":{"src":"/demos/api/registry/attr/x-align"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"fill","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fill","ariaLabel":"fill permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"fill"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当提供的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"fill"}]},{"type":"text","value":" 属性值为对象时，表示使用渐变色填充，否则使用字符串颜色填充。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"rect"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'body/fill'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'linearGradient'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  stops"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'0%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"  color"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#E67E22'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'20%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" color"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#D35400'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'40%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" color"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#E74C3C'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'60%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" color"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#C0392B'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'80%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" color"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#F39C12'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"filter","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#filter","ariaLabel":"filter permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"filter"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当提供的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"filter"}]},{"type":"text","value":" 属性值为对象时，表示使用自定义滤镜填充，否则使用原生字符串形式（如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"url(#myfilter)\""}]},{"type":"text","value":"）。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"rect"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'body/filter'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  name"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'dropShadow'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  args"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    dx"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    dy"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    blur"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"stroke","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#stroke","ariaLabel":"stroke permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"stroke"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当提供的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stroke"}]},{"type":"text","value":" 属性值为对象时，表示使用渐变色填充，否则使用字符串颜色填充。使用方式与 "},{"type":"element","tagName":"a","properties":{"href":"#fill"},"children":[{"type":"text","value":"fill"}]},{"type":"text","value":" 属性一样。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"style","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#style","ariaLabel":"style permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"style"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用 jQuery 的 "},{"type":"element","tagName":"a","properties":{"href":"https://api.jquery.com/css"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"css()"}]}]},{"type":"text","value":" 方法为指定的元素应用行内 CSS 样式。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"html","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#html","ariaLabel":"html permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"html"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用 jQuery 的 "},{"type":"element","tagName":"a","properties":{"href":"https://api.jquery.com/html"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"html()"}]}]},{"type":"text","value":" 方法为指定的元素设置 innerHTML。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"title","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#title","ariaLabel":"title permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"title"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为指定的元素添加一个 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<title>"}]},{"type":"text","value":" 子元素，"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<title>"}]},{"type":"text","value":" 元素并不影响渲染结果，而只是添加一个描述性说明。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"rect"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'body/title'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'Description of the rectangle'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"text","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#text","ariaLabel":"text permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"text"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仅适用于 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素，用于设置文本内容。如果提供的文本是单行文本（不包含换行符 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'\\n'"}]},{"type":"text","value":"），那么文本被直接设置为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素的内容；否则为每一行文本将创建一个 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<tspan>"}]},{"type":"text","value":" 元素，然后将该元素添加到"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素中，"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"textwrap","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#textwrap","ariaLabel":"textwrap permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"textWrap"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仅适用于 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素，用于设置文本内容。与 "},{"type":"element","tagName":"a","properties":{"href":"#text"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"text"}]}]},{"type":"text","value":" 属性不同的是，该属性将自动为文本添加换行，使提供的文本完全被包围在参照元素的包围盒（bounding box）中。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"其属性值为一个简单对象，通过 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"text"}]},{"type":"text","value":" 来指定文本内容。可以提供可以选的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"width"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"height"}]},{"type":"text","value":" 选项来调整元素的大小，当为负数时，表示减少相应的宽度或高度（相当于为文本设置了对应的 padding 边距）；反之为正数时，增加相应的宽度或高度；当为百分比时，表示高度或宽度是参照元素宽度或高度的多少百分比。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当提供的文本超出显示范围时，文本将被自动截断，如果 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ellipsis"}]},{"type":"text","value":" 选项被设置为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" ，则在截断文本的末尾添加一个省略号 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"textWrap"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  text"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'lorem ipsum dolor sit amet consectetur adipiscing elit'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"     "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 宽度减少 10px"}]},{"type":"text","value":"\n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'50%'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 高度为参照元素高度的一半"}]},{"type":"text","value":"\n  ellipsis"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 文本超出显示范围时，自动添加省略号"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"textpath","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#textpath","ariaLabel":"textpath permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"textPath"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仅适用于 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素，用于渲染沿路径的文本。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当提供的属性值为字符串时，表示文本沿字符串（pathData）代表的路径渲染。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当提供的属性值为对象时，可以通过 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"d"}]},{"type":"text","value":" 选项来指定文本的渲染路径，或者通过 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"selector"}]},{"type":"text","value":" 来指定一个节点/边中的 SVGPathElement 元素，支持 CSS 选择器和 "},{"type":"element","tagName":"a","properties":{"href":""},"children":[{"type":"text","value":"Markup"}]},{"type":"text","value":" 中定义的选择器。同时可以通过 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"startOffset"}]},{"type":"text","value":" 选项来指定文本在路径中的位置，例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":" 表示文本在沿路径 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"50%"}]},{"type":"text","value":" 处，"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20"}]},{"type":"text","value":" 表示文本在偏离路径起点 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":" 处。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"lineheight","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#lineheight","ariaLabel":"lineheight permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"lineHeight"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仅适用于 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素，用于指定文本的"},{"type":"element","tagName":"a","properties":{"href":"https://www.w3.org/TR/SVG/text.html#LineHeightProperty"},"children":[{"type":"text","value":"行高"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"textverticalanchor","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#textverticalanchor","ariaLabel":"textverticalanchor permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"textVerticalAnchor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仅适用于 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<text>"}]},{"type":"text","value":" 元素，元素与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 坐标在垂直方向的对齐方式。。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'top'"}]},{"type":"text","value":" 目标元素的顶部与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'middle'"}]},{"type":"text","value":" 目标元素的中心与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"'bottom'"}]},{"type":"text","value":" 目标元素与的底部与 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 对齐。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"iframe","properties":{"src":"/demos/api/registry/attr/text-anchor"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"connection","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#connection","ariaLabel":"connection permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"connection"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仅适用于边的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素，当该属性为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" 时，表示将在该元素上渲染边，即设置该元素的 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"d"}]}]},{"type":"text","value":" 为边的 pathData。 "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'pathSelector'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  connection"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'none'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"也支持包含 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stubs"}]},{"type":"text","value":" 选项的对象。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stubs"}]},{"type":"text","value":" 为正数时，表示渲染的起始和终止部分长度。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"nnection: { stubs: 20 }"}]},{"type":"text","value":" 表示连线只渲染起始的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":" 和终止的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":"，其余部分不渲染。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stubs"}]},{"type":"text","value":" 为负数时，表示中间缺失（不渲染）部分的长度。例如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"nnection: { stubs: -20 }"}]},{"type":"text","value":" 表示连线中间有 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"20px"}]},{"type":"text","value":" 不渲染。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'pathSelector'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  connection"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" stubs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"atconnectionlengthkeepgradient","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#atconnectionlengthkeepgradient","ariaLabel":"atconnectionlengthkeepgradient permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"atConnectionLengthKeepGradient"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"简称"}]},{"type":"text","value":"："},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"atConnectionLength"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将边中的指定元素移动到指定偏移量的位置处，并自动旋转元素，使其方向与所在位置边的斜率保持一致。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为正数时，表示距离边起点的偏移量。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为负数时，表示距离边终点的偏移量。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'rectSelector'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  atConnectionLengthKeepGradient"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"30"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// atConnectionLength: 30, "}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"atconnectionlengthignoregradient","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#atconnectionlengthignoregradient","ariaLabel":"atconnectionlengthignoregradient permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"atConnectionLengthIgnoreGradient"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将边中的指定元素移动到指定偏移量的位置处，忽略边的方向，即不会像 "},{"type":"element","tagName":"a","properties":{"href":"#atconnectionlengthkeepgradient"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"atConnectionLengthKeepGradient"}]}]},{"type":"text","value":" 属性那样自动旋转元素。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为正数时，表示距离边起点的偏移量。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为负数时，表示距离边终点的偏移量。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'rectSelector'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  atConnectionLengthIgnoreGradient"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"30"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"atconnectionratiokeepgradient","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#atconnectionratiokeepgradient","ariaLabel":"atconnectionratiokeepgradient permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"atConnectionRatioKeepGradient"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"简称"}]},{"type":"text","value":"："},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"atConnectionRatio"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将边中的指定元素移动到指定比例 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 位置处，并自动旋转元素，使其方向与所在位置边的斜率保持一致。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'rectSelector'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  atConnectionRatioKeepGradient"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// atConnectionRatio: 0.5, "}]},{"type":"text","value":"\n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"atconnectionratioignoregradient","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#atconnectionratioignoregradient","ariaLabel":"atconnectionratioignoregradient permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"atConnectionRatioIgnoreGradient"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将边中的指定元素移动到指定比例 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0, 1]"}]},{"type":"text","value":" 位置处，忽略边的方向，即不会像 "},{"type":"element","tagName":"a","properties":{"href":"#atconnectionratiokeepgradient"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"atConnectionRatioKeepGradient"}]}]},{"type":"text","value":" 属性那样自动旋转元素。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'rectSelector'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  atConnectionRatioIgnoreGradient"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'red'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"sourcemarker","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#sourcemarker","ariaLabel":"sourcemarker permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"sourceMarker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"适用于所有 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素，在路径的起点添加一个 SVG 元素（如起始箭头），并自动旋转该元素，使其与根据路径方向保持一致。了解更多详情请参考"},{"type":"element","tagName":"a","properties":{"href":"../../tutorial/intermediate/marker"},"children":[{"type":"text","value":"这篇教程"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"edge"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'connection/sourceMarker'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  tagName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'circle'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  fill"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#666'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#333'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  r"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  cx"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"targetmarker","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#targetmarker","ariaLabel":"targetmarker permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"targetMarker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"适用于所有 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素，在路径的终点添加一个 SVG 元素（如终点箭头），并自动旋转该元素，使其与根据路径方向保持一致。了解更多详情请参考"},{"type":"element","tagName":"a","properties":{"href":"../../tutorial/intermediate/marker"},"children":[{"type":"text","value":"这篇教程"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["custom-block","warning"]},"children":[{"type":"element","tagName":"div","properties":{"className":["custom-block-body"]},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"需要注意的是，该元素初始时就被旋转了 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"180"}]},{"type":"text","value":" 度，在此基础上再自动调整旋转角度，并与路径的方向保持一致。例如，对于一个水平的直线，我们为其起点指定了一个向左的箭头，我们也可以为其重点指定相同的箭头，这个箭头会自动指向右侧（自动旋转了 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"180"}]},{"type":"text","value":" 度）。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"vertexmarker","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#vertexmarker","ariaLabel":"vertexmarker permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"vertexMarker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"适用于所有 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素，使用方法与 "},{"type":"element","tagName":"a","properties":{"href":"#sourcemarker"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sourceMarker"}]}]},{"type":"text","value":" 一致，将在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<path>"}]},{"type":"text","value":" 元素所有顶点位置添加额外元素。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"magnet","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#magnet","ariaLabel":"magnet permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"magnet"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"magnet"}]},{"type":"text","value":" 属性为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" 时，表示该元素可以被链接，即在连线过程中可以被当做连线的起点或终点，与链接桩类似。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"port","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#port","ariaLabel":"port permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"port"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为标记为 "},{"type":"element","tagName":"a","properties":{"href":"#magnet"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"magnet"}]}]},{"type":"text","value":" 的元素指定链接桩 ID，当边链接到该元素时，该 ID 将保存到边的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"source"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"target"}]},{"type":"text","value":" 中。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为字符串时，该字符串作为链接桩 ID。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为对象时，对象的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" 属性值将作为链接桩 ID。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"event","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#event","ariaLabel":"event permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"event"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在指定的元素上自定义一个点击事件，然后可以在 Graph 上添加该事件的回调。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"node"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 表示一个删除按钮，点击时删除该节点"}]},{"type":"text","value":"\n  image"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    event"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'node:delete'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    xlinkHref"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'trash.png'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    width"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    height"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 绑定事件回调，触发时删除节点"}]},{"type":"text","value":"\ngraph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"on"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'node:delete'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" e "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  e"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"stopPropagation"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"cell"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"remove"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xlinkhref","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xlinkhref","ariaLabel":"xlinkhref permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xlinkHref"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlink:href"}]}]},{"type":"text","value":" 的别名，例如："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"text","value":"node"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  image"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    xlinkHref"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xxx.png'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xlinkshow","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xlinkshow","ariaLabel":"xlinkshow permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xlinkShow"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:show"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlink:show"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xlinktype","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xlinktype","ariaLabel":"xlinktype permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xlinkType"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:type"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlink:type"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xlinktitle","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xlinktitle","ariaLabel":"xlinktitle permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xlinkTitle"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:title"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlink:title"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xlinkarcrole","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xlinkarcrole","ariaLabel":"xlinkarcrole permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xlinkArcrole"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:arcrole"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlink:arcrole"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xmlspace","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xmlspace","ariaLabel":"xmlspace permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xmlSpace"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:space"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xml:space"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xmlbase","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xmlbase","ariaLabel":"xmlbase permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xmlBase"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:base"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xml:base"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"xmllang","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#xmllang","ariaLabel":"xmllang permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"xmlLang"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"属性 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:lang"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xml:lang"}]}]},{"type":"text","value":" 的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"registry","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#registry","ariaLabel":"registry permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"registry"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们在 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"registry"}]},{"type":"text","value":" 对象上提供了 "},{"type":"element","tagName":"a","properties":{"href":"#register"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"register"}]}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"a","properties":{"href":"#unregister"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"unregister"}]}]},{"type":"text","value":" 两个方法来注册和删除特殊属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"register","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#register","ariaLabel":"register permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"register"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sign"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"register"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"entities"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Definition "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" force"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"void"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"register"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" entity"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Definition"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" force"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Definition"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注册自定义属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"unregister","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#unregister","ariaLabel":"unregister permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"unregister"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sign"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"unregister"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Definition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"删除注册的属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"同时，我们将 "},{"type":"element","tagName":"a","properties":{"href":"#register"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"register"}]}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"a","properties":{"href":"#unregister"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"unregister"}]}]},{"type":"text","value":" 两个方法挂载为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Graph"}]},{"type":"text","value":" 的两个静态方法 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Graph.registerAttr"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Graph.unregisterAttr"}]},{"type":"text","value":"，推荐使用这两个静态方法来注册和删除特殊属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"definition","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#definition","ariaLabel":"definition permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Definition"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在内部实现中，我们将特殊属性转换为浏览器可以识别的属性，所以理论上来讲特殊属性的值可以是任何类型，同时特殊属性的定义也支持多种形态。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"字符串","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E5%AD%97%E7%AC%A6%E4%B8%B2","ariaLabel":"字符串 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"字符串"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为原生属性定义别名，例如特殊属性 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlinkHref"}]},{"type":"text","value":" 的定义，实际上是为 "},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xlink:href"}]}]},{"type":"text","value":" 属性定义了一个更易书写的别名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 定义"}]},{"type":"text","value":"\nGraph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"registerAttr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xlinkHref'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xlink:href'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 使用 "}]},{"type":"text","value":"\nnode"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  image"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    xlinkHref"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xxx.png'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"继续介绍属性定义前，我们先了解一下属性限定 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"qualify"}]},{"type":"text","value":" 函数，只有通过限定函数判定的属性值才会被特殊属性处理。例如，仅当 "},{"type":"element","tagName":"a","properties":{"href":"#stroke"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stroke"}]}]},{"type":"text","value":" 属性值为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Object"}]},{"type":"text","value":" 类型时，才会被当做特殊属性处理（使用渐变色填充边框）。看下面限定函数的定义。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sign"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"QualifyFucntion"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"this"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n  val"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrValue"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性的属性值"}]},{"type":"text","value":"\n  options"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"           \n    elem"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Element         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性应用的元素"}]},{"type":"text","value":"\n    attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrs   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 应用到该元素的属性键值对"}]},{"type":"text","value":"\n    cell"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Cell            "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边"}]},{"type":"text","value":"\n    view"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"boolean"}]},{"type":"text","value":"              "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回 true 时表示通过限定函数的判定"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"例如 "},{"type":"element","tagName":"a","properties":{"href":"#stroke"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stroke"}]}]},{"type":"text","value":" 属性的定义如下："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"Definition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"qualify"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"val"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 仅当属性值为对象时，才触发特殊属性加工逻辑。"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" ObjectExt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"isPlainObject"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"val"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"stroke"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" view "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"url(#"}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"${"}]},{"type":"text","value":"view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"defineGradient"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"stroke "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"as"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"any"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"set","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#set","ariaLabel":"set permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"set"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置属性定义，适用于大部分场景。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sign"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"interface"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"SetDefinition"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  qualify"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" QualifyFucntion "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 限定函数"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"this"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n    val"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrValue"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性的属性值"}]},{"type":"text","value":"\n    options"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"           \n      refBBox"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Rectangle    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 参照元素的包围盒，没有参照元素时使用节点的位置和大小指代的矩形"}]},{"type":"text","value":"\n      elem"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Element         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性应用的元素"}]},{"type":"text","value":"\n      attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrs   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 应用到该元素的属性键值对"}]},{"type":"text","value":"\n      cell"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Cell            "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边"}]},{"type":"text","value":"\n      view"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" SimpleAttrValue "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" SimpleAttrs "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"void"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"set"}]},{"type":"text","value":" 方法返回 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"number"}]},{"type":"text","value":" 时，表示将返回值作为特殊属性的值，这种方式通常用于扩展原生属性的定义，如支持渐变色填充的 "},{"type":"element","tagName":"a","properties":{"href":"#stroke"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"stroke"}]}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"a","properties":{"href":"#fill"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"fill"}]}]},{"type":"text","value":" 属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// stroke 属性定义"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"SetDefinition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  qualify"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ObjectExt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"isPlainObject"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" \n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"stroke"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" view "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回字符串，返回值作为 stroke 属性的属性值。"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"url(#"}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"${"}]},{"type":"text","value":"view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"graph"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"defineGradient"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"stroke "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"as"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"any"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 使用 stroke 属性"}]},{"type":"text","value":"\nnode"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"attr"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  rect"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    stroke"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"set"}]},{"type":"text","value":" 方法返回一个简单对象时，则将该对象作为属性键值对应用到对应的元素上，如 "},{"type":"element","tagName":"a","properties":{"href":"#sourcemarker"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sourceMarker"}]}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"a","properties":{"href":"#targetmarker"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"targetMarker"}]}]},{"type":"text","value":" 属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" sourceMarker"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"SetDefinition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  qualify"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ObjectExt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"isPlainObject"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"marker"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" JSONObject"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" attrs "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回一个简单对象，返回值作为属性键值对被应用到对应的元素上。"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'marker-start'"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createMarker"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"marker"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" attrs"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"set"}]},{"type":"text","value":" 方法没有返回值时，表示在在该方法内部完成了属性赋值，如 "},{"type":"element","tagName":"a","properties":{"href":"#html"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"html"}]}]},{"type":"text","value":" 属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" html"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"Definition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"html"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" elem "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 没有返回值，在方法内部完成属性赋值"}]},{"type":"text","value":"\n    view"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"$"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"elem"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"html"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"${"}]},{"type":"text","value":"html"},{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"offset","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#offset","ariaLabel":"offset permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"offset"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"偏移量属性定义。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sign"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"interface"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"OffsetDefinition"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  qualify"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" QualifyFucntion "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 限定函数"}]},{"type":"text","value":"\n  offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"this"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n    val"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrValue"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性的属性值"}]},{"type":"text","value":"\n    options"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"           \n      refBBox"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Rectangle    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 参照元素的包围盒，没有参照元素时使用节点的位置和大小指代的矩形"}]},{"type":"text","value":"\n      elem"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Element         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性应用的元素"}]},{"type":"text","value":"\n      attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrs   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 应用到该元素的属性键值对"}]},{"type":"text","value":"\n      cell"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Cell            "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边"}]},{"type":"text","value":"\n      view"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" Point"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"PointLike  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回绝对偏移量"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"返回代表 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"x"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"y"}]},{"type":"text","value":" 方向绝对偏移量的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Point.PointLike"}]},{"type":"text","value":" 对象，如 "},{"type":"element","tagName":"a","properties":{"href":"#xalign"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"xAlign"}]}]},{"type":"text","value":" 属性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" xAlign"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"OffsetDefinition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"offset"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"alignment"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" refBBox "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回 x 轴的绝对偏移量"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" x"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" y"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"position","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#position","ariaLabel":"position permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"position"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"定位属性定义。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sign"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sign"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"interface"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"PositionDefinition"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  qualify"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" QualifyFucntion "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 限定函数"}]},{"type":"text","value":"\n  offset"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"this"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n    val"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrValue"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性的属性值"}]},{"type":"text","value":"\n    options"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"           \n      refBBox"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Rectangle    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 参照元素的包围盒，没有参照元素时使用节点的位置和大小指代的矩形"}]},{"type":"text","value":"\n      elem"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Element         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 当前属性应用的元素"}]},{"type":"text","value":"\n      attrs"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ComplexAttrs   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 应用到该元素的属性键值对"}]},{"type":"text","value":"\n      cell"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Cell            "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边"}]},{"type":"text","value":"\n      view"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" CellView        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 节点/边的视图"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" Point"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"PointLike  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回绝对定位坐标"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"返回相对于节点的绝对定位坐标，如 "},{"type":"element","tagName":"a","properties":{"href":"#refx"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refX"}]}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"a","properties":{"href":"#refdx"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"refDx"}]}]},{"type":"text","value":" 属性。 "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ts"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ts"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" refX"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"PositionDefinition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"position"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"val"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" refBBox "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// 返回 x 轴的绝对定位"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" x"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" y"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/zh/docs/api/registry/attr/#presets\">presets</a></p>\n<ul>\n<li><a href=\"/zh/docs/api/registry/attr/#ref\">ref</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refx\">refX</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refx2\">refX2</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refy\">refY</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refy2\">refY2</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refdx\">refDx</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refdy\">refDy</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refwidth\">refWidth</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refwidth2\">refWidth2</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refheight\">refHeight</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refheight2\">refHeight2</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refcx\">refCx</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refcy\">refCy</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refrx\">refRx</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refry\">refRy</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refrcircumscribed\">refRCircumscribed</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refrinscribed\">refRInscribed</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refdkeepoffset\">refDKeepOffset</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refdresetoffset\">refDResetOffset</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#resetoffset\">resetOffset</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refpointskeepoffset\">refPointsKeepOffset</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#refpointsresetoffset\">refPointsResetOffset</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xalign\">xAlign</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#yalign\">yAlign</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#fill\">fill</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#filter\">filter</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#stroke\">stroke</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#style\">style</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#html\">html</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#title\">title</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#text\">text</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#textwrap\">textWrap</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#textpath\">textPath</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#lineheight\">lineHeight</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#textverticalanchor\">textVerticalAnchor</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#connection\">connection</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#atconnectionlengthkeepgradient\">atConnectionLengthKeepGradient</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#atconnectionlengthignoregradient\">atConnectionLengthIgnoreGradient</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#atconnectionratiokeepgradient\">atConnectionRatioKeepGradient</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#atconnectionratioignoregradient\">atConnectionRatioIgnoreGradient</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#sourcemarker\">sourceMarker</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#targetmarker\">targetMarker</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#vertexmarker\">vertexMarker</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#magnet\">magnet</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#port\">port</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#event\">event</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xlinkhref\">xlinkHref</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xlinkshow\">xlinkShow</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xlinktype\">xlinkType</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xlinktitle\">xlinkTitle</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xlinkarcrole\">xlinkArcrole</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xmlspace\">xmlSpace</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xmlbase\">xmlBase</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#xmllang\">xmlLang</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/zh/docs/api/registry/attr/#registry\">registry</a></p>\n<ul>\n<li><a href=\"/zh/docs/api/registry/attr/#register\">register</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#unregister\">unregister</a></li>\n<li>\n<p><a href=\"/zh/docs/api/registry/attr/#definition\">Definition</a></p>\n<ul>\n<li><a href=\"/zh/docs/api/registry/attr/#%E5%AD%97%E7%AC%A6%E4%B8%B2\">字符串</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#set\">set</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#offset\">offset</a></li>\n<li><a href=\"/zh/docs/api/registry/attr/#position\">position</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/zh/docs/api/registry/attr","readingTime":{"text":"11 min read","time":629699.9999999999}},"frontmatter":{"title":"Attr"},"parent":{"__typename":"File","relativePath":"api/registry/attr.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/tutorial/basic/graph"},"frontmatter":{"title":"画布 Graph","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/graph"},"frontmatter":{"title":"画布 Graph","order":-1}}},{"node":{"fields":{"slug":"/en/docs/tutorial/about"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/about"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/cell"},"frontmatter":{"title":"基类 Cell","order":0}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/cell"},"frontmatter":{"title":"基类 Cell","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/view/view"},"frontmatter":{"title":"View","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/view/view"},"frontmatter":{"title":"View","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/attr"},"frontmatter":{"title":"Attr","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/registry/attr"},"frontmatter":{"title":"Attr","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/model/cell"},"frontmatter":{"title":"Cell","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/graph"},"frontmatter":{"title":"Graph","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/model/cell"},"frontmatter":{"title":"Cell","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/graph"},"frontmatter":{"title":"Graph","order":0}}},{"node":{"fields":{"slug":"/en/docs/tutorial/getting-started"},"frontmatter":{"title":"快速上手","order":1}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/getting-started"},"frontmatter":{"title":"快速上手","order":1}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/node"},"frontmatter":{"title":"节点 Node","order":1}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/node"},"frontmatter":{"title":"节点 Node","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/view/cellview"},"frontmatter":{"title":"CellView","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/view/cellview"},"frontmatter":{"title":"CellView","order":1}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/serialization"},"frontmatter":{"title":"序列化/反序列化","order":2}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/serialization"},"frontmatter":{"title":"序列化/反序列化","order":2}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/edge"},"frontmatter":{"title":"边 Edge","order":2}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/edge"},"frontmatter":{"title":"边 Edge","order":2}}},{"node":{"fields":{"slug":"/en/docs/tutorial/advanced/animation"},"frontmatter":{"title":"使用动画","order":2}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/advanced/animation"},"frontmatter":{"title":"使用动画","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/view/nodeview"},"frontmatter":{"title":"NodeView","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/view/nodeview"},"frontmatter":{"title":"NodeView","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/ui/menu"},"frontmatter":{"title":"Menu","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/menu"},"frontmatter":{"title":"Menu","order":2}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/group"},"frontmatter":{"title":"群组 Group","order":3}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/group"},"frontmatter":{"title":"群组 Group","order":3}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/port"},"frontmatter":{"title":"连接桩 Port","order":3}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/port"},"frontmatter":{"title":"连接桩 Port","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/view/edgeview"},"frontmatter":{"title":"EdgeView","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/view/edgeview"},"frontmatter":{"title":"EdgeView","order":3}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/events"},"frontmatter":{"title":"事件系统","order":4}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/events"},"frontmatter":{"title":"事件系统","order":4}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/grid"},"frontmatter":{"title":"网格 Grid","order":4}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/grid"},"frontmatter":{"title":"网格 Grid","order":4}}},{"node":{"fields":{"slug":"/en/docs/tutorial/advanced/react"},"frontmatter":{"title":"使用 HTML/React 渲染","order":4}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/advanced/react"},"frontmatter":{"title":"使用 HTML/React 渲染","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/ui/dropdown"},"frontmatter":{"title":"Dropdown","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/dropdown"},"frontmatter":{"title":"Dropdown","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/registry/port-layout"},"frontmatter":{"title":"PortLayout","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/port-layout"},"frontmatter":{"title":"PortLayout","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/model/node"},"frontmatter":{"title":"Node","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/model/node"},"frontmatter":{"title":"Node","order":4}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/background"},"frontmatter":{"title":"背景 Background","order":5}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/background"},"frontmatter":{"title":"背景 Background","order":5}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/attrs"},"frontmatter":{"title":"特殊属性","order":6}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/attrs"},"frontmatter":{"title":"特殊属性","order":6}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/clipboard"},"frontmatter":{"title":"剪切板 Clipboard","order":6}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/clipboard"},"frontmatter":{"title":"剪切板 Clipboard","order":6}}},{"node":{"fields":{"slug":"/en/docs/tutorial/advanced/components"},"frontmatter":{"title":"使用 UI 组件","order":6}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/advanced/components"},"frontmatter":{"title":"使用 UI 组件","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/ui/contextmenu"},"frontmatter":{"title":"ContextMenu","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/contextmenu"},"frontmatter":{"title":"ContextMenu","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/registry/port-label-layout"},"frontmatter":{"title":"PortLabelLayout","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/port-label-layout"},"frontmatter":{"title":"PortLabelLayout","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/model/edge"},"frontmatter":{"title":"Edge","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/model/edge"},"frontmatter":{"title":"Edge","order":6}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/history"},"frontmatter":{"title":"撤销/重做 Redo/Undo","order":7}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/history"},"frontmatter":{"title":"撤销/重做 Redo/Undo","order":7}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/custom-node"},"frontmatter":{"title":"自定义节点","order":8}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/custom-node"},"frontmatter":{"title":"自定义节点","order":8}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/selection"},"frontmatter":{"title":"点选/框选 Selection","order":8}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/selection"},"frontmatter":{"title":"点选/框选 Selection","order":8}}},{"node":{"fields":{"slug":"/en/docs/api/ui/menubar"},"frontmatter":{"title":"Menubar","order":8}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/menubar"},"frontmatter":{"title":"Menubar","order":8}}},{"node":{"fields":{"slug":"/en/docs/api/registry/node-anchor"},"frontmatter":{"title":"NodeAnchor","order":8}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/node-anchor"},"frontmatter":{"title":"NodeAnchor","order":8}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/snapline"},"frontmatter":{"title":"对齐线 Snapline","order":9}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/snapline"},"frontmatter":{"title":"对齐线 Snapline","order":9}}},{"node":{"fields":{"slug":"/en/docs/tutorial/contact"},"frontmatter":{"title":"联系我们","order":10}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/custom-edge"},"frontmatter":{"title":"自定义边","order":10}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/contact"},"frontmatter":{"title":"联系我们","order":10}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/custom-edge"},"frontmatter":{"title":"自定义边","order":10}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/scroller"},"frontmatter":{"title":"滚动 Scroller","order":10}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/scroller"},"frontmatter":{"title":"滚动 Scroller","order":10}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/toolbar"},"frontmatter":{"title":"Toolbar","order":10}}},{"node":{"fields":{"slug":"/en/docs/api/ui/toolbar"},"frontmatter":{"title":"Toolbar","order":10}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/edge-anchor"},"frontmatter":{"title":"EdgeAnchor","order":10}}},{"node":{"fields":{"slug":"/en/docs/api/registry/edge-anchor"},"frontmatter":{"title":"EdgeAnchor","order":10}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/minimap"},"frontmatter":{"title":"小地图 MiniMap","order":11}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/minimap"},"frontmatter":{"title":"小地图 MiniMap","order":11}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/edge-labels"},"frontmatter":{"title":"使用标签 Labels","order":12}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/edge-labels"},"frontmatter":{"title":"使用标签 Labels","order":12}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/dnd"},"frontmatter":{"title":"拖拽 Dnd","order":12}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/dnd"},"frontmatter":{"title":"拖拽 Dnd","order":12}}},{"node":{"fields":{"slug":"/en/docs/api/ui/splitbox"},"frontmatter":{"title":"SplitBox","order":12}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/splitbox"},"frontmatter":{"title":"SplitBox","order":12}}},{"node":{"fields":{"slug":"/en/docs/api/registry/connection-point"},"frontmatter":{"title":"ConnectionPoint","order":12}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/connection-point"},"frontmatter":{"title":"ConnectionPoint","order":12}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/marker"},"frontmatter":{"title":"使用箭头 Marker","order":14}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/marker"},"frontmatter":{"title":"使用箭头 Marker","order":14}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/keyboard"},"frontmatter":{"title":"键盘快捷键 Keyboard","order":14}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/keyboard"},"frontmatter":{"title":"键盘快捷键 Keyboard","order":14}}},{"node":{"fields":{"slug":"/en/docs/api/ui/scrollbox"},"frontmatter":{"title":"ScrollBox","order":14}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/scrollbox"},"frontmatter":{"title":"ScrollBox","order":14}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/intermediate/tools"},"frontmatter":{"title":"使用工具 Tools","order":16}}},{"node":{"fields":{"slug":"/en/docs/tutorial/intermediate/tools"},"frontmatter":{"title":"使用工具 Tools","order":16}}},{"node":{"fields":{"slug":"/en/docs/tutorial/basic/mousewheel"},"frontmatter":{"title":"滚轮缩放 MouseWheel","order":16}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/basic/mousewheel"},"frontmatter":{"title":"滚轮缩放 MouseWheel","order":16}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/auto-scrollbox"},"frontmatter":{"title":"AutoScrollBox","order":16}}},{"node":{"fields":{"slug":"/en/docs/api/ui/auto-scrollbox"},"frontmatter":{"title":"AutoScrollBox","order":16}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/router"},"frontmatter":{"title":"Router","order":16}}},{"node":{"fields":{"slug":"/en/docs/api/registry/router"},"frontmatter":{"title":"Router","order":16}}},{"node":{"fields":{"slug":"/en/docs/api/ui/color-picker"},"frontmatter":{"title":"ColorPicker","order":18}}},{"node":{"fields":{"slug":"/zh/docs/api/ui/color-picker"},"frontmatter":{"title":"ColorPicker","order":18}}},{"node":{"fields":{"slug":"/en/docs/api/registry/connector"},"frontmatter":{"title":"Connector","order":18}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/connector"},"frontmatter":{"title":"Connector","order":18}}},{"node":{"fields":{"slug":"/en/docs/api/registry/marker"},"frontmatter":{"title":"Marker","order":20}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/marker"},"frontmatter":{"title":"Marker","order":20}}},{"node":{"fields":{"slug":"/en/docs/api/registry/highlighter"},"frontmatter":{"title":"Highlighter","order":22}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/highlighter"},"frontmatter":{"title":"Highlighter","order":22}}},{"node":{"fields":{"slug":"/en/docs/api/registry/node-tool"},"frontmatter":{"title":"NodeTool","order":24}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/node-tool"},"frontmatter":{"title":"NodeTool","order":24}}},{"node":{"fields":{"slug":"/en/docs/api/registry/edge-tool"},"frontmatter":{"title":"EdgeTool","order":26}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/edge-tool"},"frontmatter":{"title":"EdgeTool","order":26}}},{"node":{"fields":{"slug":"/en/docs/api/registry/background"},"frontmatter":{"title":"Background","order":28}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/background"},"frontmatter":{"title":"Background","order":28}}},{"node":{"fields":{"slug":"/en/docs/api/registry/grid"},"frontmatter":{"title":"Grid","order":30}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/grid"},"frontmatter":{"title":"Grid","order":30}}},{"node":{"fields":{"slug":"/en/docs/api/registry/filter"},"frontmatter":{"title":"Filter","order":32}}},{"node":{"fields":{"slug":"/zh/docs/api/registry/filter"},"frontmatter":{"title":"Filter","order":32}}},{"node":{"fields":{"slug":"/en/docs/tutorial/faq/epilog"},"frontmatter":{"title":"","order":null}}},{"node":{"fields":{"slug":"/zh/docs/tutorial/faq/epilog"},"frontmatter":{"title":"","order":null}}}]}},"pageContext":{"examples":[{"relativePath":"tree/mindmap/demo/tree.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/tree/mindmap/demo/tree.ts","order":0,"filename":"tree.ts","title":{"zh":"脑图树","en":"Mindmap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*bZ3tTITjafsAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Node, Edge, Shape } from '@antv/x6'\n\nclass TreeNode extends Node {\n  private collapsed: boolean = false\n\n  protected postprocess() {\n    this.toggleCollapse(false)\n  }\n\n  isCollapsed() {\n    return this.collapsed === true\n  }\n\n  toggleButtonVisibility(visible: boolean) {\n    this.attr('buttonGroup', { display: visible ? 'block' : 'none' })\n  }\n\n  toggleCollapse(collapsed: boolean) {\n    const target = collapsed == null ? !this.collapsed : collapsed\n    if (!target) {\n      this.attr('buttonSign', { d: 'M 1 5 9 5 M 5 1 5 9', strokeWidth: 1.6 })\n    } else {\n      this.attr('buttonSign', { d: 'M 2 5 8 5', strokeWidth: 1.8 })\n    }\n    this.collapsed = target\n  }\n}\n\nTreeNode.config({\n  zIndex: 2,\n  markup: [\n    {\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [\n        {\n          tagName: 'rect',\n          selector: 'button',\n          attrs: {\n            'pointer-events': 'visiblePainted',\n          },\n        },\n        {\n          tagName: 'path',\n          selector: 'buttonSign',\n          attrs: {\n            fill: 'none',\n            'pointer-events': 'none',\n          },\n        },\n      ],\n    },\n    {\n      tagName: 'rect',\n      selector: 'body',\n    },\n    {\n      tagName: 'text',\n      selector: 'label',\n    },\n  ],\n  attrs: {\n    body: {\n      refWidth: '100%',\n      refHeight: '100%',\n      strokeWidth: 1,\n      fill: '#ffffff',\n      stroke: '#a0a0a0',\n    },\n    label: {\n      textWrap: {\n        ellipsis: true,\n        width: -10,\n      },\n      textAnchor: 'middle',\n      textVerticalAnchor: 'middle',\n      refX: '50%',\n      refY: '50%',\n      fontSize: 12,\n    },\n    buttonGroup: {\n      refX: '100%',\n      refY: '50%',\n    },\n    button: {\n      fill: '#4C65DD',\n      stroke: 'none',\n      x: -10,\n      y: -10,\n      height: 20,\n      width: 30,\n      rx: 10,\n      ry: 10,\n      cursor: 'pointer',\n      event: 'node:collapse',\n    },\n    buttonSign: {\n      refX: 5,\n      refY: -5,\n      stroke: '#FFFFFF',\n      strokeWidth: 1.6,\n    },\n  },\n})\n\nclass TreeEdge extends Shape.Edge {\n  isHidden() {\n    var node = this.getTargetNode() as TreeNode\n    return !node || !node.isVisible()\n  }\n}\n\nTreeEdge.config({\n  zIndex: 1,\n  attrs: {\n    line: {\n      stroke: '#a0a0a0',\n      strokeWidth: 1,\n      targetMarker: null,\n    },\n  },\n})\n\nif (Node.registry.exist('tree-node')) {\n  Node.registry.register('tree-node', TreeNode as typeof Node)\n}\nif (Edge.registry.exist('tree-edge')) {\n  Edge.registry.register('tree-edge', TreeEdge as typeof Edge)\n}\n\nconst container = document.getElementById('container')!\nconst graph = new Graph({\n  container: container,\n  frozen: true,\n  async: true,\n  interacting: false,\n  grid: 1,\n  sorting: 'approx',\n  background: {\n    color: '#F3F7F6',\n  },\n  scroller: {\n    enabled: true,\n  },\n  connecting: {\n    anchor: 'orth',\n    connectionPoint: 'boundary',\n    router: {\n      name: 'er',\n      args: {\n        direction: 'H',\n      },\n    },\n  },\n})\ngraph.zoomTo(0.8)\n\nfetch('../data/mindmap.json')\n  .then((response) => response.json())\n  .then((data) => {\n    var start = new Date().getTime()\n    const nodes = data.nodes.map(({ leaf, ...metadata }: any) => {\n      const node = new TreeNode(metadata)\n      if (leaf) {\n        node.toggleButtonVisibility(leaf === false)\n      }\n      return node\n    })\n    const edges = data.edges.map(\n      (edge: any) =>\n        new TreeEdge({\n          source: edge.source,\n          target: edge.target,\n        }),\n    )\n    graph.resetCells([...nodes, ...edges])\n\n    graph.unfreeze({\n      progress({ done }) {\n        if (done) {\n          const time = new Date().getTime() - start\n          console.log(time)\n          graph.unfreeze({\n            batchSize: 50,\n          })\n        }\n      },\n    })\n    graph.on('node:collapse', ({ node }) => {\n      const treeNode = node as TreeNode\n      treeNode.toggleCollapse()\n      const collapsed = treeNode.isCollapsed()\n      const nodes = graph.getSuccessors(node) as TreeNode[]\n      nodes.forEach((node) => {\n        node.toggleVisible(collapsed)\n      })\n    })\n  })\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.tree = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var TreeNode = /*#__PURE__*/function (_Node) {\n    _inherits(TreeNode, _Node);\n\n    var _super = _createSuper(TreeNode);\n\n    function TreeNode() {\n      var _this;\n\n      _classCallCheck(this, TreeNode);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"collapsed\", false);\n\n      return _this;\n    }\n\n    _createClass(TreeNode, [{\n      key: \"postprocess\",\n      value: function postprocess() {\n        this.toggleCollapse(false);\n      }\n    }, {\n      key: \"isCollapsed\",\n      value: function isCollapsed() {\n        return this.collapsed === true;\n      }\n    }, {\n      key: \"toggleButtonVisibility\",\n      value: function toggleButtonVisibility(visible) {\n        this.attr('buttonGroup', {\n          display: visible ? 'block' : 'none'\n        });\n      }\n    }, {\n      key: \"toggleCollapse\",\n      value: function toggleCollapse(collapsed) {\n        var target = collapsed == null ? !this.collapsed : collapsed;\n\n        if (!target) {\n          this.attr('buttonSign', {\n            d: 'M 1 5 9 5 M 5 1 5 9',\n            strokeWidth: 1.6\n          });\n        } else {\n          this.attr('buttonSign', {\n            d: 'M 2 5 8 5',\n            strokeWidth: 1.8\n          });\n        }\n\n        this.collapsed = target;\n      }\n    }]);\n\n    return TreeNode;\n  }(_x.Node);\n\n  TreeNode.config({\n    zIndex: 2,\n    markup: [{\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [{\n        tagName: 'rect',\n        selector: 'button',\n        attrs: {\n          'pointer-events': 'visiblePainted'\n        }\n      }, {\n        tagName: 'path',\n        selector: 'buttonSign',\n        attrs: {\n          fill: 'none',\n          'pointer-events': 'none'\n        }\n      }]\n    }, {\n      tagName: 'rect',\n      selector: 'body'\n    }, {\n      tagName: 'text',\n      selector: 'label'\n    }],\n    attrs: {\n      body: {\n        refWidth: '100%',\n        refHeight: '100%',\n        strokeWidth: 1,\n        fill: '#ffffff',\n        stroke: '#a0a0a0'\n      },\n      label: {\n        textWrap: {\n          ellipsis: true,\n          width: -10\n        },\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle',\n        refX: '50%',\n        refY: '50%',\n        fontSize: 12\n      },\n      buttonGroup: {\n        refX: '100%',\n        refY: '50%'\n      },\n      button: {\n        fill: '#4C65DD',\n        stroke: 'none',\n        x: -10,\n        y: -10,\n        height: 20,\n        width: 30,\n        rx: 10,\n        ry: 10,\n        cursor: 'pointer',\n        event: 'node:collapse'\n      },\n      buttonSign: {\n        refX: 5,\n        refY: -5,\n        stroke: '#FFFFFF',\n        strokeWidth: 1.6\n      }\n    }\n  });\n\n  var TreeEdge = /*#__PURE__*/function (_Shape$Edge) {\n    _inherits(TreeEdge, _Shape$Edge);\n\n    var _super2 = _createSuper(TreeEdge);\n\n    function TreeEdge() {\n      _classCallCheck(this, TreeEdge);\n\n      return _super2.apply(this, arguments);\n    }\n\n    _createClass(TreeEdge, [{\n      key: \"isHidden\",\n      value: function isHidden() {\n        var node = this.getTargetNode();\n        return !node || !node.isVisible();\n      }\n    }]);\n\n    return TreeEdge;\n  }(_x.Shape.Edge);\n\n  TreeEdge.config({\n    zIndex: 1,\n    attrs: {\n      line: {\n        stroke: '#a0a0a0',\n        strokeWidth: 1,\n        targetMarker: null\n      }\n    }\n  });\n\n  if (_x.Node.registry.exist('tree-node')) {\n    _x.Node.registry.register('tree-node', TreeNode);\n  }\n\n  if (_x.Edge.registry.exist('tree-edge')) {\n    _x.Edge.registry.register('tree-edge', TreeEdge);\n  }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    frozen: true,\n    async: true,\n    interacting: false,\n    grid: 1,\n    sorting: 'approx',\n    background: {\n      color: '#F3F7F6'\n    },\n    scroller: {\n      enabled: true\n    },\n    connecting: {\n      anchor: 'orth',\n      connectionPoint: 'boundary',\n      router: {\n        name: 'er',\n        args: {\n          direction: 'H'\n        }\n      }\n    }\n  });\n  graph.zoomTo(0.8);\n  fetch('../data/mindmap.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var start = new Date().getTime();\n    var nodes = data.nodes.map(function (_ref) {\n      var leaf = _ref.leaf,\n          metadata = _objectWithoutProperties(_ref, [\"leaf\"]);\n\n      var node = new TreeNode(metadata);\n\n      if (leaf) {\n        node.toggleButtonVisibility(leaf === false);\n      }\n\n      return node;\n    });\n    var edges = data.edges.map(function (edge) {\n      return new TreeEdge({\n        source: edge.source,\n        target: edge.target\n      });\n    });\n    graph.resetCells([].concat(_toConsumableArray(nodes), _toConsumableArray(edges)));\n    graph.unfreeze({\n      progress: function progress(_ref2) {\n        var done = _ref2.done;\n\n        if (done) {\n          var time = new Date().getTime() - start;\n          console.log(time);\n          graph.unfreeze({\n            batchSize: 50\n          });\n        }\n      }\n    });\n    graph.on('node:collapse', function (_ref3) {\n      var node = _ref3.node;\n      var treeNode = node;\n      treeNode.toggleCollapse();\n      var collapsed = treeNode.isCollapsed();\n      var nodes = graph.getSuccessors(node);\n      nodes.forEach(function (node) {\n        node.toggleVisible(collapsed);\n      });\n    });\n  });\n});"},{"relativePath":"tool/snapline/demo/snapline.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/tool/snapline/demo/snapline.ts","order":0,"filename":"snapline.ts","title":{"zh":"对齐线","en":"Snapline"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*cmi1SJ112qIAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  width: 800,\n  height: 600,\n  grid: 1,\n  snapline: true,\n})\n\ngraph.addNode({\n  shape: 'rect',\n  x: 50,\n  y: 50,\n  width: 100,\n  height: 40,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    label: { text: 'A' },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 250,\n  y: 80,\n  width: 50,\n  height: 50,\n  attrs: {\n    body: {\n      fill: '#d3f261',\n      stroke: '#bae637',\n    },\n    label: { text: 'B' },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 350,\n  y: 150,\n  width: 80,\n  height: 40,\n  attrs: {\n    body: {\n      fill: '#5cdbd3',\n      stroke: '#36cfc9',\n    },\n    label: { text: 'C' },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.snapline = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    width: 800,\n    height: 600,\n    grid: 1,\n    snapline: true\n  });\n  graph.addNode({\n    shape: 'rect',\n    x: 50,\n    y: 50,\n    width: 100,\n    height: 40,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      label: {\n        text: 'A'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 250,\n    y: 80,\n    width: 50,\n    height: 50,\n    attrs: {\n      body: {\n        fill: '#d3f261',\n        stroke: '#bae637'\n      },\n      label: {\n        text: 'B'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 350,\n    y: 150,\n    width: 80,\n    height: 40,\n    attrs: {\n      body: {\n        fill: '#5cdbd3',\n        stroke: '#36cfc9'\n      },\n      label: {\n        text: 'C'\n      }\n    }\n  });\n});"},{"relativePath":"tool/scroller/demo/scroller.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/tool/scroller/demo/scroller.ts","order":0,"filename":"scroller.ts","title":{"zh":"滚动画布","en":"Scroller"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*l_BLQJiDIYkAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')!\nconst graph = new Graph({\n  container: container,\n  resizing: true,\n  background: {\n    color: '#f5f5f5',\n  },\n  grid: {\n    visible: true,\n  },\n  scroller: {\n    enabled: true,\n    pageVisible: true,\n    pageBreak: true,\n    pannable: true,\n  },\n  mousewheel: {\n    enabled: true,\n    modifiers: ['ctrl', 'meta'],\n    minScale: 0.5,\n    maxScale: 2,\n  },\n})\n\nconst rect = graph.addNode({\n  shape: 'rect',\n  x: 300,\n  y: 300,\n  width: 90,\n  height: 60,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    label: { text: 'A' },\n  },\n})\n\nrect.on('removed', () => {\n  console.log('rect was removed')\n})\n\nconst circle = graph.addNode({\n  shape: 'circle',\n  x: 400,\n  y: 400,\n  width: 40,\n  height: 40,\n  attrs: {\n    body: {\n      fill: '#d3f261',\n      stroke: '#bae637',\n    },\n    label: { text: 'B' },\n  },\n})\n\ngraph.addEdge({\n  source: rect,\n  target: circle,\n})\n\ngraph.center()\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.scroller = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    resizing: true,\n    background: {\n      color: '#f5f5f5'\n    },\n    grid: {\n      visible: true\n    },\n    scroller: {\n      enabled: true,\n      pageVisible: true,\n      pageBreak: true,\n      pannable: true\n    },\n    mousewheel: {\n      enabled: true,\n      modifiers: ['ctrl', 'meta'],\n      minScale: 0.5,\n      maxScale: 2\n    }\n  });\n  var rect = graph.addNode({\n    shape: 'rect',\n    x: 300,\n    y: 300,\n    width: 90,\n    height: 60,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      label: {\n        text: 'A'\n      }\n    }\n  });\n  rect.on('removed', function () {\n    console.log('rect was removed');\n  });\n  var circle = graph.addNode({\n    shape: 'circle',\n    x: 400,\n    y: 400,\n    width: 40,\n    height: 40,\n    attrs: {\n      body: {\n        fill: '#d3f261',\n        stroke: '#bae637'\n      },\n      label: {\n        text: 'B'\n      }\n    }\n  });\n  graph.addEdge({\n    source: rect,\n    target: circle\n  });\n  graph.center();\n});"},{"relativePath":"shape/router/demo/customRouter.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/customRouter.ts","order":6,"filename":"customRouter.ts","title":{"zh":"随机路由","en":"Random Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*L3C-TrM4lG0AAAAAAAAAAAAAARQnAQ","source":"import { Graph, Point, Registry } from '@antv/x6'\n\nif (!Registry.Router.registry.exist('random')) {\n  Graph.registerRouter('random', (vertices, args, view) => {\n    const BOUNCES = args.bounces || 20\n    const points = vertices.map((p) => Point.create(p))\n\n    for (var i = 0; i < BOUNCES; i++) {\n      const sourceCorner = view.sourceBBox.getCenter()\n      const targetCorner = view.targetBBox.getCenter()\n      const randomPoint = Point.random(\n        sourceCorner.x,\n        targetCorner.x,\n        sourceCorner.y,\n        targetCorner.y,\n      )\n      points.push(randomPoint)\n    }\n\n    return points\n  })\n}\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: 10,\n})\n\nconst source = graph.addNode({\n  x: 50,\n  y: 50,\n  width: 120,\n  height: 80,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    label: { text: 'Source' },\n  },\n})\n\nconst target = graph.addNode(\n  source.clone().translate(600, 400).attr('label/text', 'Target'),\n)\n\ngraph.addEdge({\n  source,\n  target,\n  router: {\n    name: 'random',\n    args: {\n      bounces: 10,\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.customRouter = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  if (!_x.Registry.Router.registry.exist('random')) {\n    _x.Graph.registerRouter('random', function (vertices, args, view) {\n      var BOUNCES = args.bounces || 20;\n      var points = vertices.map(function (p) {\n        return _x.Point.create(p);\n      });\n\n      for (var i = 0; i < BOUNCES; i++) {\n        var sourceCorner = view.sourceBBox.getCenter();\n        var targetCorner = view.targetBBox.getCenter();\n\n        var randomPoint = _x.Point.random(sourceCorner.x, targetCorner.x, sourceCorner.y, targetCorner.y);\n\n        points.push(randomPoint);\n      }\n\n      return points;\n    });\n  }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: 10\n  });\n  var source = graph.addNode({\n    x: 50,\n    y: 50,\n    width: 120,\n    height: 80,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      label: {\n        text: 'Source'\n      }\n    }\n  });\n  var target = graph.addNode(source.clone().translate(600, 400).attr('label/text', 'Target'));\n  graph.addEdge({\n    source: source,\n    target: target,\n    router: {\n      name: 'random',\n      args: {\n        bounces: 10\n      }\n    }\n  });\n});"},{"relativePath":"shape/router/demo/manhattan.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/manhattan.ts","order":3,"filename":"manhattan.ts","title":{"zh":"曼哈顿路由","en":"Manhattan Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*FXGRQ5RmLyMAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Edge, EdgeView } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst source = graph.addNode({\n  x: 80,\n  y: 40,\n  width: 120,\n  height: 50,\n  attrs: {\n    body: {\n      fill: '#fe8550',\n      stroke: '#ed8661',\n      strokeWidth: 2,\n    },\n    label: {\n      text: 'Source',\n      fill: '#f0f0f0',\n      fontSize: 18,\n      fontWeight: 'lighter',\n      fontVariant: 'small-caps',\n    },\n  },\n})\n\nconst target = graph.addNode(\n  source.clone().translate(480, 350).setAttrByPath('label/text', 'Target'),\n)\n\nconst obstacles: Node[] = []\nconst obstacle = graph.addNode({\n  x: 340,\n  y: 140,\n  width: 120,\n  height: 50,\n  label: 'Obstacle',\n  attrs: {\n    label: {\n      text: 'Obstacle',\n      fill: '#eee',\n    },\n    body: {\n      fill: '#9687fe',\n      stroke: '#8e89e5',\n      strokeWidth: 2,\n    },\n  },\n})\n\nlet edge: Edge\n\nconst update = () => {\n  const edgeView = graph.findViewByCell(edge) as EdgeView\n  edgeView.update()\n}\n\nobstacles.push(obstacle)\nobstacles.push(graph.addNode(obstacle.clone().translate(200, 100)))\nobstacles.push(graph.addNode(obstacle.clone().translate(-200, 150)))\nobstacles.forEach((obstacle) => obstacle.on('change:position', update))\n\nedge = graph.addEdge({\n  source,\n  target,\n  router: {\n    name: 'manhattan',\n    args: {\n      startDirections: ['top'],\n      endDirections: ['bottom'],\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.manhattan = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var source = graph.addNode({\n    x: 80,\n    y: 40,\n    width: 120,\n    height: 50,\n    attrs: {\n      body: {\n        fill: '#fe8550',\n        stroke: '#ed8661',\n        strokeWidth: 2\n      },\n      label: {\n        text: 'Source',\n        fill: '#f0f0f0',\n        fontSize: 18,\n        fontWeight: 'lighter',\n        fontVariant: 'small-caps'\n      }\n    }\n  });\n  var target = graph.addNode(source.clone().translate(480, 350).setAttrByPath('label/text', 'Target'));\n  var obstacles = [];\n  var obstacle = graph.addNode({\n    x: 340,\n    y: 140,\n    width: 120,\n    height: 50,\n    label: 'Obstacle',\n    attrs: {\n      label: {\n        text: 'Obstacle',\n        fill: '#eee'\n      },\n      body: {\n        fill: '#9687fe',\n        stroke: '#8e89e5',\n        strokeWidth: 2\n      }\n    }\n  });\n  var edge;\n\n  var update = function update() {\n    var edgeView = graph.findViewByCell(edge);\n    edgeView.update();\n  };\n\n  obstacles.push(obstacle);\n  obstacles.push(graph.addNode(obstacle.clone().translate(200, 100)));\n  obstacles.push(graph.addNode(obstacle.clone().translate(-200, 150)));\n  obstacles.forEach(function (obstacle) {\n    return obstacle.on('change:position', update);\n  });\n  edge = graph.addEdge({\n    source: source,\n    target: target,\n    router: {\n      name: 'manhattan',\n      args: {\n        startDirections: ['top'],\n        endDirections: ['bottom']\n      }\n    }\n  });\n});"},{"relativePath":"shape/router/demo/metro.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/metro.ts","order":4,"filename":"metro.ts","title":{"zh":"铁路路由","en":"Metro Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*ABPIT5s-yh4AAAAAAAAAAAAAARQnAQ","source":"import { Graph, Edge, EdgeView } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst source = graph.addNode({\n  x: 80,\n  y: 40,\n  width: 120,\n  height: 50,\n  attrs: {\n    body: {\n      fill: '#fe8550',\n      stroke: '#ed8661',\n      strokeWidth: 2,\n    },\n    label: {\n      text: 'Source',\n      fill: '#f0f0f0',\n      fontSize: 18,\n      fontWeight: 'lighter',\n      fontVariant: 'small-caps',\n    },\n  },\n})\n\nconst target = graph.addNode(\n  source.clone().translate(480, 350).setAttrByPath('label/text', 'Target'),\n)\n\nconst obstacles: Node[] = []\nconst obstacle = graph.addNode({\n  x: 340,\n  y: 140,\n  width: 120,\n  height: 50,\n  label: 'Obstacle',\n  attrs: {\n    label: {\n      text: 'Obstacle',\n      fill: '#eee',\n    },\n    body: {\n      fill: '#9687fe',\n      stroke: '#8e89e5',\n      strokeWidth: 2,\n    },\n  },\n})\n\nlet edge: Edge\n\nconst update = () => {\n  const edgeView = graph.findViewByCell(edge) as EdgeView\n  edgeView.update()\n}\n\nobstacles.push(obstacle)\nobstacles.push(graph.addNode(obstacle.clone().translate(200, 100)))\nobstacles.push(graph.addNode(obstacle.clone().translate(-200, 150)))\nobstacles.forEach((obstacle) => obstacle.on('change:position', update))\n\nedge = graph.addEdge({\n  source,\n  target,\n  router: {\n    name: 'metro',\n    args: {\n      startDirections: ['top'],\n      endDirections: ['bottom'],\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.metro = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var source = graph.addNode({\n    x: 80,\n    y: 40,\n    width: 120,\n    height: 50,\n    attrs: {\n      body: {\n        fill: '#fe8550',\n        stroke: '#ed8661',\n        strokeWidth: 2\n      },\n      label: {\n        text: 'Source',\n        fill: '#f0f0f0',\n        fontSize: 18,\n        fontWeight: 'lighter',\n        fontVariant: 'small-caps'\n      }\n    }\n  });\n  var target = graph.addNode(source.clone().translate(480, 350).setAttrByPath('label/text', 'Target'));\n  var obstacles = [];\n  var obstacle = graph.addNode({\n    x: 340,\n    y: 140,\n    width: 120,\n    height: 50,\n    label: 'Obstacle',\n    attrs: {\n      label: {\n        text: 'Obstacle',\n        fill: '#eee'\n      },\n      body: {\n        fill: '#9687fe',\n        stroke: '#8e89e5',\n        strokeWidth: 2\n      }\n    }\n  });\n  var edge;\n\n  var update = function update() {\n    var edgeView = graph.findViewByCell(edge);\n    edgeView.update();\n  };\n\n  obstacles.push(obstacle);\n  obstacles.push(graph.addNode(obstacle.clone().translate(200, 100)));\n  obstacles.push(graph.addNode(obstacle.clone().translate(-200, 150)));\n  obstacles.forEach(function (obstacle) {\n    return obstacle.on('change:position', update);\n  });\n  edge = graph.addEdge({\n    source: source,\n    target: target,\n    router: {\n      name: 'metro',\n      args: {\n        startDirections: ['top'],\n        endDirections: ['bottom']\n      }\n    }\n  });\n});"},{"relativePath":"shape/router/demo/er.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/er.ts","order":5,"filename":"er.ts","title":{"zh":"ER路由","en":"ER Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*iE8MS6-xgZMAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst rect1 = graph.addNode({\n  x: 30,\n  y: 30,\n  width: 100,\n  height: 40,\n  label: 'hello',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\nconst rect2 = graph.addNode({\n  x: 300,\n  y: 240,\n  width: 100,\n  height: 40,\n  label: 'world',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: rect1,\n  target: rect2,\n  router: {\n    name: 'er',\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.er = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var rect1 = graph.addNode({\n    x: 30,\n    y: 30,\n    width: 100,\n    height: 40,\n    label: 'hello',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  var rect2 = graph.addNode({\n    x: 300,\n    y: 240,\n    width: 100,\n    height: 40,\n    label: 'world',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  graph.addEdge({\n    source: rect1,\n    target: rect2,\n    router: {\n      name: 'er'\n    }\n  });\n});"},{"relativePath":"shape/router/demo/normal.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"默认路由","en":"Normal Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*KdkFTJ-sP6YAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst rect1 = graph.addNode({\n  x: 30,\n  y: 30,\n  width: 100,\n  height: 40,\n  label: 'hello',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\nconst rect2 = graph.addNode({\n  x: 300,\n  y: 240,\n  width: 100,\n  height: 40,\n  label: 'world',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: rect1,\n  target: rect2,\n  vertices: [\n    { x: 100, y: 200 },\n    { x: 300, y: 120 },\n  ],\n  router: {\n    name: 'normal',\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.normal = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var rect1 = graph.addNode({\n    x: 30,\n    y: 30,\n    width: 100,\n    height: 40,\n    label: 'hello',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  var rect2 = graph.addNode({\n    x: 300,\n    y: 240,\n    width: 100,\n    height: 40,\n    label: 'world',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  graph.addEdge({\n    source: rect1,\n    target: rect2,\n    vertices: [{\n      x: 100,\n      y: 200\n    }, {\n      x: 300,\n      y: 120\n    }],\n    router: {\n      name: 'normal'\n    }\n  });\n});"},{"relativePath":"shape/router/demo/oneSide.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/oneSide.ts","order":2,"filename":"oneSide.ts","title":{"zh":"OneSide","en":"OneSide Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*622fTp6J8twAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst rect1 = graph.addNode({\n  x: 30,\n  y: 30,\n  width: 100,\n  height: 40,\n  label: 'hello',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\nconst rect2 = graph.addNode({\n  x: 300,\n  y: 240,\n  width: 100,\n  height: 40,\n  label: 'world',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: rect1,\n  target: rect2,\n  router: {\n    name: 'oneSide',\n    args: { side: 'right', padding: 50 },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.oneSide = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var rect1 = graph.addNode({\n    x: 30,\n    y: 30,\n    width: 100,\n    height: 40,\n    label: 'hello',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  var rect2 = graph.addNode({\n    x: 300,\n    y: 240,\n    width: 100,\n    height: 40,\n    label: 'world',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  graph.addEdge({\n    source: rect1,\n    target: rect2,\n    router: {\n      name: 'oneSide',\n      args: {\n        side: 'right',\n        padding: 50\n      }\n    }\n  });\n});"},{"relativePath":"shape/nodes/demo/circle.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/circle.ts","order":2,"filename":"circle.ts","title":{"zh":"圆形","en":"Circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*pffdSKADueQAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\n// row 1\n// -----\ngraph.addNode({\n  shape: 'circle',\n  x: 40,\n  y: 40,\n  width: 60,\n  height: 60,\n  label: 'circle',\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 200,\n  y: 40,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 360,\n  y: 40,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 520,\n  y: 40,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n  },\n})\n\n// row 2\n// -----\n\ngraph.addNode({\n  shape: 'circle',\n  x: 40,\n  y: 140,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    label: {\n      refX: 16,\n      refY: 16,\n      textAnchor: 'start',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 200,\n  y: 140,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: 16,\n      refY: 0.5,\n      textAnchor: 'start',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 360,\n  y: 140,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n    label: {\n      refX: 16,\n      refY: '100%',\n      refY2: -16,\n      textAnchor: 'start',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 520,\n  y: 140,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n    label: {\n      refX: 0.5,\n      refY: -4,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\n// row 3\n// -----\n\ngraph.addNode({\n  shape: 'circle',\n  x: 40,\n  y: 240,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    label: {\n      refX: 0.5,\n      refY: 16,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 200,\n  y: 240,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: 0.5,\n      refY: 0.5,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 360,\n  y: 240,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n    label: {\n      refX: 0.5,\n      refY: '100%',\n      refY2: -16,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 520,\n  y: 240,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n    label: {\n      refX: '100%',\n      refX2: 4,\n      refY: 0.5,\n      textAnchor: 'start',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\n// row 4\n// -----\n\ngraph.addNode({\n  shape: 'circle',\n  x: 40,\n  y: 340,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    label: {\n      refX: '100%',\n      refX2: -16,\n      refY: 16,\n      textAnchor: 'end',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 200,\n  y: 340,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: '100%',\n      refX2: -16,\n      refY: 0.5,\n      textAnchor: 'end',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 360,\n  y: 340,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n    label: {\n      refX: '100%',\n      refX2: -16,\n      refY: '100%',\n      refY2: -16,\n      textAnchor: 'end',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'circle',\n  x: 520,\n  y: 340,\n  width: 60,\n  height: 60,\n  label: 'circle',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n    label: {\n      refX: 0.5,\n      refY: '100%',\n      refY2: 4,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.circle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  }); // row 1\n  // -----\n\n  graph.addNode({\n    shape: 'circle',\n    x: 40,\n    y: 40,\n    width: 60,\n    height: 60,\n    label: 'circle'\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 200,\n    y: 40,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 360,\n    y: 40,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 520,\n    y: 40,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      }\n    }\n  }); // row 2\n  // -----\n\n  graph.addNode({\n    shape: 'circle',\n    x: 40,\n    y: 140,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      label: {\n        refX: 16,\n        refY: 16,\n        textAnchor: 'start',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 200,\n    y: 140,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: 16,\n        refY: 0.5,\n        textAnchor: 'start',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 360,\n    y: 140,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      },\n      label: {\n        refX: 16,\n        refY: '100%',\n        refY2: -16,\n        textAnchor: 'start',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 520,\n    y: 140,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      },\n      label: {\n        refX: 0.5,\n        refY: -4,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  }); // row 3\n  // -----\n\n  graph.addNode({\n    shape: 'circle',\n    x: 40,\n    y: 240,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      label: {\n        refX: 0.5,\n        refY: 16,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 200,\n    y: 240,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: 0.5,\n        refY: 0.5,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 360,\n    y: 240,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      },\n      label: {\n        refX: 0.5,\n        refY: '100%',\n        refY2: -16,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 520,\n    y: 240,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      },\n      label: {\n        refX: '100%',\n        refX2: 4,\n        refY: 0.5,\n        textAnchor: 'start',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  }); // row 4\n  // -----\n\n  graph.addNode({\n    shape: 'circle',\n    x: 40,\n    y: 340,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      label: {\n        refX: '100%',\n        refX2: -16,\n        refY: 16,\n        textAnchor: 'end',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 200,\n    y: 340,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: '100%',\n        refX2: -16,\n        refY: 0.5,\n        textAnchor: 'end',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 360,\n    y: 340,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      },\n      label: {\n        refX: '100%',\n        refX2: -16,\n        refY: '100%',\n        refY2: -16,\n        textAnchor: 'end',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'circle',\n    x: 520,\n    y: 340,\n    width: 60,\n    height: 60,\n    label: 'circle',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      },\n      label: {\n        refX: 0.5,\n        refY: '100%',\n        refY2: 4,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n});"},{"relativePath":"shape/nodes/demo/ellipse.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/ellipse.ts","order":1,"filename":"ellipse.ts","title":{"zh":"椭圆","en":"Ellipse"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*xzAvR6eQe6sAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\n// row 1\n// -----\ngraph.addNode({\n  shape: 'ellipse',\n  x: 40,\n  y: 40,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 200,\n  y: 40,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 360,\n  y: 40,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 520,\n  y: 40,\n  width: 60,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n  },\n})\n\n// row 2\n// -----\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 40,\n  y: 140,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    label: {\n      refX: 16,\n      refY: 16,\n      textAnchor: 'start',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 200,\n  y: 140,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: 16,\n      refY: 0.5,\n      textAnchor: 'start',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 360,\n  y: 140,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n    label: {\n      refX: 16,\n      refY: '100%',\n      refY2: -16,\n      textAnchor: 'start',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 520,\n  y: 140,\n  width: 60,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n    label: {\n      refX: 0.5,\n      refY: -4,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\n// row 3\n// -----\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 40,\n  y: 240,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    label: {\n      refX: 0.5,\n      refY: 16,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 200,\n  y: 240,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: 0.5,\n      refY: 0.5,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 360,\n  y: 240,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n    label: {\n      refX: 0.5,\n      refY: '100%',\n      refY2: -16,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 520,\n  y: 240,\n  width: 60,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n    label: {\n      refX: '100%',\n      refX2: 4,\n      refY: 0.5,\n      textAnchor: 'start',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\n// row 4\n// -----\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 40,\n  y: 340,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    label: {\n      refX: '100%',\n      refX2: -16,\n      refY: 16,\n      textAnchor: 'end',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 200,\n  y: 340,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: '100%',\n      refX2: -16,\n      refY: 0.5,\n      textAnchor: 'end',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 360,\n  y: 340,\n  width: 120,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n    },\n    label: {\n      refX: '100%',\n      refX2: -16,\n      refY: '100%',\n      refY2: -16,\n      textAnchor: 'end',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'ellipse',\n  x: 520,\n  y: 340,\n  width: 60,\n  height: 60,\n  label: 'ellipse',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n    },\n    label: {\n      refX: 0.5,\n      refY: '100%',\n      refY2: 4,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.ellipse = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  }); // row 1\n  // -----\n\n  graph.addNode({\n    shape: 'ellipse',\n    x: 40,\n    y: 40,\n    width: 120,\n    height: 60,\n    label: 'ellipse'\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 200,\n    y: 40,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 360,\n    y: 40,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 520,\n    y: 40,\n    width: 60,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      }\n    }\n  }); // row 2\n  // -----\n\n  graph.addNode({\n    shape: 'ellipse',\n    x: 40,\n    y: 140,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      label: {\n        refX: 16,\n        refY: 16,\n        textAnchor: 'start',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 200,\n    y: 140,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: 16,\n        refY: 0.5,\n        textAnchor: 'start',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 360,\n    y: 140,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      },\n      label: {\n        refX: 16,\n        refY: '100%',\n        refY2: -16,\n        textAnchor: 'start',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 520,\n    y: 140,\n    width: 60,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      },\n      label: {\n        refX: 0.5,\n        refY: -4,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  }); // row 3\n  // -----\n\n  graph.addNode({\n    shape: 'ellipse',\n    x: 40,\n    y: 240,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      label: {\n        refX: 0.5,\n        refY: 16,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 200,\n    y: 240,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: 0.5,\n        refY: 0.5,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 360,\n    y: 240,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      },\n      label: {\n        refX: 0.5,\n        refY: '100%',\n        refY2: -16,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 520,\n    y: 240,\n    width: 60,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      },\n      label: {\n        refX: '100%',\n        refX2: 4,\n        refY: 0.5,\n        textAnchor: 'start',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  }); // row 4\n  // -----\n\n  graph.addNode({\n    shape: 'ellipse',\n    x: 40,\n    y: 340,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      label: {\n        refX: '100%',\n        refX2: -16,\n        refY: 16,\n        textAnchor: 'end',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 200,\n    y: 340,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: '100%',\n        refX2: -16,\n        refY: 0.5,\n        textAnchor: 'end',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 360,\n    y: 340,\n    width: 120,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f'\n      },\n      label: {\n        refX: '100%',\n        refX2: -16,\n        refY: '100%',\n        refY2: -16,\n        textAnchor: 'end',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'ellipse',\n    x: 520,\n    y: 340,\n    width: 60,\n    height: 60,\n    label: 'ellipse',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff'\n      },\n      label: {\n        refX: 0.5,\n        refY: '100%',\n        refY2: 4,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n});"},{"relativePath":"shape/router/demo/orth.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/orth.ts","order":1,"filename":"orth.ts","title":{"zh":"正交路由","en":"Orth Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*2fRdRaP2JBUAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst rect1 = graph.addNode({\n  x: 30,\n  y: 30,\n  width: 100,\n  height: 40,\n  label: 'hello',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\nconst rect2 = graph.addNode({\n  x: 300,\n  y: 240,\n  width: 100,\n  height: 40,\n  label: 'world',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: rect1,\n  target: rect2,\n  vertices: [\n    { x: 100, y: 200 },\n    { x: 300, y: 120 },\n  ],\n  router: {\n    name: 'orth',\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.orth = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var rect1 = graph.addNode({\n    x: 30,\n    y: 30,\n    width: 100,\n    height: 40,\n    label: 'hello',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  var rect2 = graph.addNode({\n    x: 300,\n    y: 240,\n    width: 100,\n    height: 40,\n    label: 'world',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      }\n    }\n  });\n  graph.addEdge({\n    source: rect1,\n    target: rect2,\n    vertices: [{\n      x: 100,\n      y: 200\n    }, {\n      x: 300,\n      y: 120\n    }],\n    router: {\n      name: 'orth'\n    }\n  });\n});"},{"relativePath":"shape/nodes/demo/html.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/html.ts","order":4,"filename":"html.ts","title":{"zh":"HTML","en":"HTML"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*9RRESpvzfMIAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst source = graph.addNode({\n  shape: 'html',\n  x: 80,\n  y: 80,\n  width: 160,\n  height: 60,\n  html: () => {\n    const wrap = document.createElement('div')\n    wrap.style.width = '100%'\n    wrap.style.height = '100%'\n    wrap.style.background = '#722ed1'\n    wrap.style.display = 'flex'\n    wrap.style.justifyContent = 'center'\n    wrap.style.alignItems = 'center'\n    wrap.style.color = '#fff'\n    wrap.innerText = 'hello'\n\n    return wrap\n  },\n})\n\nconst wrap = document.createElement('div')\nwrap.style.width = '100%'\nwrap.style.height = '100%'\nwrap.style.background = '#2f54eb'\nwrap.style.display = 'flex'\nwrap.style.justifyContent = 'center'\nwrap.style.alignItems = 'center'\nwrap.style.color = '#fff'\nwrap.innerText = 'world'\n\nconst target = graph.addNode({\n  shape: 'html',\n  x: 320,\n  y: 320,\n  width: 160,\n  height: 60,\n  html: wrap,\n})\n\ngraph.addEdge({\n  source,\n  target,\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.html = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  var source = graph.addNode({\n    shape: 'html',\n    x: 80,\n    y: 80,\n    width: 160,\n    height: 60,\n    html: function html() {\n      var wrap = document.createElement('div');\n      wrap.style.width = '100%';\n      wrap.style.height = '100%';\n      wrap.style.background = '#722ed1';\n      wrap.style.display = 'flex';\n      wrap.style.justifyContent = 'center';\n      wrap.style.alignItems = 'center';\n      wrap.style.color = '#fff';\n      wrap.innerText = 'hello';\n      return wrap;\n    }\n  });\n  var wrap = document.createElement('div');\n  wrap.style.width = '100%';\n  wrap.style.height = '100%';\n  wrap.style.background = '#2f54eb';\n  wrap.style.display = 'flex';\n  wrap.style.justifyContent = 'center';\n  wrap.style.alignItems = 'center';\n  wrap.style.color = '#fff';\n  wrap.innerText = 'world';\n  var target = graph.addNode({\n    shape: 'html',\n    x: 320,\n    y: 320,\n    width: 160,\n    height: 60,\n    html: wrap\n  });\n  graph.addEdge({\n    source: source,\n    target: target\n  });\n});"},{"relativePath":"shape/nodes/demo/image.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/image.ts","order":3,"filename":"image.ts","title":{"zh":"图片","en":"Image"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*YmP5Q5fww5cAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\ngraph.addNode({\n  shape: 'image',\n  x: 320,\n  y: 240,\n  width: 94,\n  height: 28,\n  imageUrl:\n    'https://gw.alipayobjects.com/os/s/prod/antv/assets/image/logo-with-text-73b8a.svg',\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.image = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    shape: 'image',\n    x: 320,\n    y: 240,\n    width: 94,\n    height: 28,\n    imageUrl: 'https://gw.alipayobjects.com/os/s/prod/antv/assets/image/logo-with-text-73b8a.svg'\n  });\n});"},{"relativePath":"shape/nodes/demo/rect.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/rect.ts","order":0,"filename":"rect.ts","title":{"zh":"矩形","en":"Rectangle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*3rFwR6gDxSMAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\n// row 1\n// -----\ngraph.addNode({\n  x: 40,\n  y: 40,\n  width: 120,\n  height: 60,\n  label: 'rect',\n})\n\ngraph.addNode({\n  x: 200,\n  y: 40,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 360,\n  y: 40,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n      rx: 10,\n      ry: 10,\n    },\n  },\n})\n\ngraph.addNode({\n  x: 520,\n  y: 40,\n  width: 60,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n      rx: 10,\n      ry: 10,\n    },\n  },\n})\n\n// row 2\n// -----\n\ngraph.addNode({\n  x: 40,\n  y: 140,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    label: {\n      refX: 8,\n      refY: 8,\n      textAnchor: 'start',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 200,\n  y: 140,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: 8,\n      refY: 0.5,\n      textAnchor: 'start',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 360,\n  y: 140,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n      rx: 10,\n      ry: 10,\n    },\n    label: {\n      refX: 8,\n      refY: '100%',\n      refY2: -8,\n      textAnchor: 'start',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 520,\n  y: 140,\n  width: 60,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n      rx: 10,\n      ry: 10,\n    },\n    label: {\n      refX: 0.5,\n      refY: -4,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\n// row 3\n// -----\n\ngraph.addNode({\n  x: 40,\n  y: 240,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    label: {\n      refX: 0.5,\n      refY: 8,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 200,\n  y: 240,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: 0.5,\n      refY: 0.5,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 360,\n  y: 240,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n      rx: 10,\n      ry: 10,\n    },\n    label: {\n      refX: 0.5,\n      refY: '100%',\n      refY2: -8,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 520,\n  y: 240,\n  width: 60,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n      rx: 10,\n      ry: 10,\n    },\n    label: {\n      refX: '100%',\n      refX2: 4,\n      refY: 0.5,\n      textAnchor: 'start',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\n// row 4\n// -----\n\ngraph.addNode({\n  x: 40,\n  y: 340,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    label: {\n      refX: '100%',\n      refX2: -8,\n      refY: 8,\n      textAnchor: 'end',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 200,\n  y: 340,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#ff7875',\n      fill: '#ffa39e',\n    },\n    label: {\n      refX: '100%',\n      refX2: -8,\n      refY: 0.5,\n      textAnchor: 'end',\n      textVerticalAnchor: 'middle',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 360,\n  y: 340,\n  width: 120,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#95de64',\n      fill: '#b7eb8f',\n      rx: 10,\n      ry: 10,\n    },\n    label: {\n      refX: '100%',\n      refX2: -8,\n      refY: '100%',\n      refY2: -8,\n      textAnchor: 'end',\n      textVerticalAnchor: 'bottom',\n    },\n  },\n})\n\ngraph.addNode({\n  x: 520,\n  y: 340,\n  width: 60,\n  height: 60,\n  label: 'rect',\n  attrs: {\n    body: {\n      stroke: '#85a5ff',\n      fill: '#adc6ff',\n      rx: 10,\n      ry: 10,\n    },\n    label: {\n      refX: 0.5,\n      refY: '100%',\n      refY2: 4,\n      textAnchor: 'middle',\n      textVerticalAnchor: 'top',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.rect = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  }); // row 1\n  // -----\n\n  graph.addNode({\n    x: 40,\n    y: 40,\n    width: 120,\n    height: 60,\n    label: 'rect'\n  });\n  graph.addNode({\n    x: 200,\n    y: 40,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      }\n    }\n  });\n  graph.addNode({\n    x: 360,\n    y: 40,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f',\n        rx: 10,\n        ry: 10\n      }\n    }\n  });\n  graph.addNode({\n    x: 520,\n    y: 40,\n    width: 60,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff',\n        rx: 10,\n        ry: 10\n      }\n    }\n  }); // row 2\n  // -----\n\n  graph.addNode({\n    x: 40,\n    y: 140,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      label: {\n        refX: 8,\n        refY: 8,\n        textAnchor: 'start',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    x: 200,\n    y: 140,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: 8,\n        refY: 0.5,\n        textAnchor: 'start',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    x: 360,\n    y: 140,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f',\n        rx: 10,\n        ry: 10\n      },\n      label: {\n        refX: 8,\n        refY: '100%',\n        refY2: -8,\n        textAnchor: 'start',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    x: 520,\n    y: 140,\n    width: 60,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff',\n        rx: 10,\n        ry: 10\n      },\n      label: {\n        refX: 0.5,\n        refY: -4,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  }); // row 3\n  // -----\n\n  graph.addNode({\n    x: 40,\n    y: 240,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      label: {\n        refX: 0.5,\n        refY: 8,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    x: 200,\n    y: 240,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: 0.5,\n        refY: 0.5,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    x: 360,\n    y: 240,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f',\n        rx: 10,\n        ry: 10\n      },\n      label: {\n        refX: 0.5,\n        refY: '100%',\n        refY2: -8,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    x: 520,\n    y: 240,\n    width: 60,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff',\n        rx: 10,\n        ry: 10\n      },\n      label: {\n        refX: '100%',\n        refX2: 4,\n        refY: 0.5,\n        textAnchor: 'start',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  }); // row 4\n  // -----\n\n  graph.addNode({\n    x: 40,\n    y: 340,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      label: {\n        refX: '100%',\n        refX2: -8,\n        refY: 8,\n        textAnchor: 'end',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n  graph.addNode({\n    x: 200,\n    y: 340,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#ff7875',\n        fill: '#ffa39e'\n      },\n      label: {\n        refX: '100%',\n        refX2: -8,\n        refY: 0.5,\n        textAnchor: 'end',\n        textVerticalAnchor: 'middle'\n      }\n    }\n  });\n  graph.addNode({\n    x: 360,\n    y: 340,\n    width: 120,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#95de64',\n        fill: '#b7eb8f',\n        rx: 10,\n        ry: 10\n      },\n      label: {\n        refX: '100%',\n        refX2: -8,\n        refY: '100%',\n        refY2: -8,\n        textAnchor: 'end',\n        textVerticalAnchor: 'bottom'\n      }\n    }\n  });\n  graph.addNode({\n    x: 520,\n    y: 340,\n    width: 60,\n    height: 60,\n    label: 'rect',\n    attrs: {\n      body: {\n        stroke: '#85a5ff',\n        fill: '#adc6ff',\n        rx: 10,\n        ry: 10\n      },\n      label: {\n        refX: 0.5,\n        refY: '100%',\n        refY2: 4,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'top'\n      }\n    }\n  });\n});"},{"relativePath":"shape/marker/demo/marker.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/marker/demo/marker.ts","order":0,"filename":"marker.ts","title":{"zh":"基础箭头","en":"Basic Marker"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*nGtbTYeXGgUAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n})\n\ngraph.addNode({\n  id: 'a',\n  label: 'left',\n  shape: 'rect',\n  width: 80,\n  height: 300,\n  x: 100,\n  y: 100,\n  ports: {\n    groups: {\n      right: {\n        position: 'right',\n      },\n    },\n    items: [\n      { id: 'p1', group: 'right' },\n      { id: 'p2', group: 'right' },\n      { id: 'p3', group: 'right' },\n      { id: 'p4', group: 'right' },\n      { id: 'p5', group: 'right' },\n      { id: 'p6', group: 'right' },\n      { id: 'p7', group: 'right' },\n      { id: 'p8', group: 'right' },\n    ],\n  },\n  attrs: {\n    body: {\n      fill: '#b37feb',\n      stroke: '#9254de',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  label: 'right',\n  shape: 'rect',\n  width: 80,\n  height: 300,\n  x: 500,\n  y: 100,\n  ports: {\n    groups: {\n      left: {\n        position: 'left',\n      },\n    },\n    items: [\n      { id: 'p9', group: 'left' },\n      { id: 'p10', group: 'left' },\n      { id: 'p11', group: 'left' },\n      { id: 'p12', group: 'left' },\n      { id: 'p13', group: 'left' },\n      { id: 'p14', group: 'left' },\n      { id: 'p15', group: 'left' },\n      { id: 'p16', group: 'left' },\n    ],\n  },\n  attrs: {\n    body: {\n      fill: '#ff85c0',\n      stroke: '#f759ab',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\nconst types = [\n  'block',\n  'classic',\n  'diamond',\n  'circle',\n  'circlePlus',\n  'ellipse',\n  'cross',\n  'async',\n]\ntypes.forEach((type, index) => {\n  graph.addEdge({\n    source: {\n      cell: 'a',\n      port: `p${index + 1}`,\n    },\n    target: {\n      cell: 'b',\n      port: `p${index + 9}`,\n    },\n    attrs: {\n      line: {\n        targetMarker: type,\n        stroke: '#002766',\n      },\n    },\n    label: type,\n  })\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.marker = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container\n  });\n  graph.addNode({\n    id: 'a',\n    label: 'left',\n    shape: 'rect',\n    width: 80,\n    height: 300,\n    x: 100,\n    y: 100,\n    ports: {\n      groups: {\n        right: {\n          position: 'right'\n        }\n      },\n      items: [{\n        id: 'p1',\n        group: 'right'\n      }, {\n        id: 'p2',\n        group: 'right'\n      }, {\n        id: 'p3',\n        group: 'right'\n      }, {\n        id: 'p4',\n        group: 'right'\n      }, {\n        id: 'p5',\n        group: 'right'\n      }, {\n        id: 'p6',\n        group: 'right'\n      }, {\n        id: 'p7',\n        group: 'right'\n      }, {\n        id: 'p8',\n        group: 'right'\n      }]\n    },\n    attrs: {\n      body: {\n        fill: '#b37feb',\n        stroke: '#9254de'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    label: 'right',\n    shape: 'rect',\n    width: 80,\n    height: 300,\n    x: 500,\n    y: 100,\n    ports: {\n      groups: {\n        left: {\n          position: 'left'\n        }\n      },\n      items: [{\n        id: 'p9',\n        group: 'left'\n      }, {\n        id: 'p10',\n        group: 'left'\n      }, {\n        id: 'p11',\n        group: 'left'\n      }, {\n        id: 'p12',\n        group: 'left'\n      }, {\n        id: 'p13',\n        group: 'left'\n      }, {\n        id: 'p14',\n        group: 'left'\n      }, {\n        id: 'p15',\n        group: 'left'\n      }, {\n        id: 'p16',\n        group: 'left'\n      }]\n    },\n    attrs: {\n      body: {\n        fill: '#ff85c0',\n        stroke: '#f759ab'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  var types = ['block', 'classic', 'diamond', 'circle', 'circlePlus', 'ellipse', 'cross', 'async'];\n  types.forEach(function (type, index) {\n    graph.addEdge({\n      source: {\n        cell: 'a',\n        port: \"p\".concat(index + 1)\n      },\n      target: {\n        cell: 'b',\n        port: \"p\".concat(index + 9)\n      },\n      attrs: {\n        line: {\n          targetMarker: type,\n          stroke: '#002766'\n        }\n      },\n      label: type\n    });\n  });\n});"},{"relativePath":"shape/edges/demo/edge.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/edges/demo/edge.ts","order":0,"filename":"edge.ts","title":{"zh":"默认边","en":"Default Edge"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Z-LXQKuFXxwAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\nimport insertCss from 'insert-css'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addEdge({\n  source: { x: 240, y: 40 },\n  target: { x: 280, y: 180 },\n  vertices: [{ x: 240, y: 140 }],\n})\n\ngraph.addEdge({\n  source: { x: 340, y: 40 },\n  target: { x: 380, y: 180 },\n  vertices: [{ x: 340, y: 140 }],\n  connector: {\n    name: 'rounded',\n    args: { radius: 10 },\n  },\n  attrs: {\n    line: {\n      targetMarker: 'classic',\n      stroke: '#f5222d',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 440, y: 40 },\n  target: { x: 480, y: 180 },\n  vertices: [{ x: 440, y: 140 }],\n  connector: { name: 'smooth' },\n  attrs: {\n    line: {\n      stroke: '#faad14',\n      targetMarker: 'classic',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 540, y: 40 },\n  target: { x: 580, y: 180 },\n  vertices: [{ x: 540, y: 140 }],\n  connector: { name: 'smooth' },\n  attrs: {\n    line: {\n      stroke: '#1890ff',\n      strokeDasharray: 5,\n      targetMarker: 'classic',\n      style: {\n        animation: 'ant-line 30s infinite linear',\n      },\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 240, y: 240 },\n  target: { x: 280, y: 380 },\n  vertices: [{ x: 240, y: 340 }],\n  router: { name: 'er' },\n})\n\ngraph.addEdge({\n  source: { x: 340, y: 240 },\n  target: { x: 380, y: 380 },\n  vertices: [{ x: 340, y: 340 }],\n  router: { name: 'orth' },\n  connector: { name: 'rounded' },\n  attrs: {\n    line: {\n      targetMarker: 'classic',\n      stroke: '#f5222d',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 440, y: 240 },\n  target: { x: 480, y: 380 },\n  vertices: [{ x: 440, y: 340 }],\n  router: { name: 'manhattan' },\n  connector: { name: 'rounded' },\n  attrs: {\n    line: {\n      stroke: '#faad14',\n      targetMarker: 'classic',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: { x: 540, y: 240 },\n  target: { x: 580, y: 380 },\n  vertices: [{ x: 540, y: 360 }],\n  router: { name: 'metro' },\n  attrs: {\n    line: {\n      stroke: '#1890ff',\n      strokeDasharray: 5,\n      targetMarker: 'classic',\n    },\n  },\n})\n\ninsertCss(`\n  @keyframes ant-line {\n    to {\n        stroke-dashoffset: -1000\n    }\n  }\n`)\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\", \"insert-css\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"), require(\"insert-css\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6, global.insertCss);\n    global.edge = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x, _insertCss) {\n  \"use strict\";\n\n  _insertCss = _interopRequireDefault(_insertCss);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addEdge({\n    source: {\n      x: 240,\n      y: 40\n    },\n    target: {\n      x: 280,\n      y: 180\n    },\n    vertices: [{\n      x: 240,\n      y: 140\n    }]\n  });\n  graph.addEdge({\n    source: {\n      x: 340,\n      y: 40\n    },\n    target: {\n      x: 380,\n      y: 180\n    },\n    vertices: [{\n      x: 340,\n      y: 140\n    }],\n    connector: {\n      name: 'rounded',\n      args: {\n        radius: 10\n      }\n    },\n    attrs: {\n      line: {\n        targetMarker: 'classic',\n        stroke: '#f5222d'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 440,\n      y: 40\n    },\n    target: {\n      x: 480,\n      y: 180\n    },\n    vertices: [{\n      x: 440,\n      y: 140\n    }],\n    connector: {\n      name: 'smooth'\n    },\n    attrs: {\n      line: {\n        stroke: '#faad14',\n        targetMarker: 'classic'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 540,\n      y: 40\n    },\n    target: {\n      x: 580,\n      y: 180\n    },\n    vertices: [{\n      x: 540,\n      y: 140\n    }],\n    connector: {\n      name: 'smooth'\n    },\n    attrs: {\n      line: {\n        stroke: '#1890ff',\n        strokeDasharray: 5,\n        targetMarker: 'classic',\n        style: {\n          animation: 'ant-line 30s infinite linear'\n        }\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 240,\n      y: 240\n    },\n    target: {\n      x: 280,\n      y: 380\n    },\n    vertices: [{\n      x: 240,\n      y: 340\n    }],\n    router: {\n      name: 'er'\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 340,\n      y: 240\n    },\n    target: {\n      x: 380,\n      y: 380\n    },\n    vertices: [{\n      x: 340,\n      y: 340\n    }],\n    router: {\n      name: 'orth'\n    },\n    connector: {\n      name: 'rounded'\n    },\n    attrs: {\n      line: {\n        targetMarker: 'classic',\n        stroke: '#f5222d'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 440,\n      y: 240\n    },\n    target: {\n      x: 480,\n      y: 380\n    },\n    vertices: [{\n      x: 440,\n      y: 340\n    }],\n    router: {\n      name: 'manhattan'\n    },\n    connector: {\n      name: 'rounded'\n    },\n    attrs: {\n      line: {\n        stroke: '#faad14',\n        targetMarker: 'classic'\n      }\n    }\n  });\n  graph.addEdge({\n    source: {\n      x: 540,\n      y: 240\n    },\n    target: {\n      x: 580,\n      y: 380\n    },\n    vertices: [{\n      x: 540,\n      y: 360\n    }],\n    router: {\n      name: 'metro'\n    },\n    attrs: {\n      line: {\n        stroke: '#1890ff',\n        strokeDasharray: 5,\n        targetMarker: 'classic'\n      }\n    }\n  });\n  (0, _insertCss.default)(\"\\n  @keyframes ant-line {\\n    to {\\n        stroke-dashoffset: -1000\\n    }\\n  }\\n\");\n});"},{"relativePath":"shape/connector/demo/jumpover.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/jumpover.ts","order":3,"filename":"jumpover.ts","title":{"zh":"跳线","en":"JumpOver Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Gbu3R5fVQC4AAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: 10,\n})\n\nconst rect = graph.createNode({\n  x: 100,\n  y: 50,\n  width: 70,\n  height: 30,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    label: {\n      text: 'rect',\n      magnet: true,\n      fill: '#ffffff',\n    },\n  },\n})\n\nfor (let i = 0; i < 6; i++) {\n  const source = rect.clone().translate(i * 100, i * 10)\n  graph.addNode(source)\n\n  const target = source.clone().translate(0, 200)\n  graph.addNode(target)\n\n  const edge = graph.createEdge({\n    source,\n    target,\n  })\n\n  if (i % 2 === 0) {\n    edge.prop('connector', {\n      name: 'jumpover',\n      args: { type: 'gap' },\n    })\n    edge.attr('line/stroke', '#722ed1')\n  }\n\n  graph.addEdge(edge)\n}\n\nconst crossRectA = rect.clone().position(16, 100)\ngraph.addNode(crossRectA)\n\nconst crossRectB = rect.clone().position(16, 200)\ngraph.addNode(crossRectB)\n\ngraph.addEdge({\n  source: crossRectA,\n  target: crossRectB,\n  connector: { name: 'jumpover' },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n  vertices: [\n    { x: 700, y: 190 },\n    { x: 700, y: 280 },\n  ],\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.jumpover = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: 10\n  });\n  var rect = graph.createNode({\n    x: 100,\n    y: 50,\n    width: 70,\n    height: 30,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      label: {\n        text: 'rect',\n        magnet: true,\n        fill: '#ffffff'\n      }\n    }\n  });\n\n  for (var i = 0; i < 6; i++) {\n    var source = rect.clone().translate(i * 100, i * 10);\n    graph.addNode(source);\n    var target = source.clone().translate(0, 200);\n    graph.addNode(target);\n    var edge = graph.createEdge({\n      source: source,\n      target: target\n    });\n\n    if (i % 2 === 0) {\n      edge.prop('connector', {\n        name: 'jumpover',\n        args: {\n          type: 'gap'\n        }\n      });\n      edge.attr('line/stroke', '#722ed1');\n    }\n\n    graph.addEdge(edge);\n  }\n\n  var crossRectA = rect.clone().position(16, 100);\n  graph.addNode(crossRectA);\n  var crossRectB = rect.clone().position(16, 200);\n  graph.addNode(crossRectB);\n  graph.addEdge({\n    source: crossRectA,\n    target: crossRectB,\n    connector: {\n      name: 'jumpover'\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    },\n    vertices: [{\n      x: 700,\n      y: 190\n    }, {\n      x: 700,\n      y: 280\n    }]\n  });\n});"},{"relativePath":"shape/connector/demo/normal.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"正常连线","en":"Normal Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*HwCJRawjuCAAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addNode({\n  id: 'a',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 100,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 500,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: 'a',\n  target: 'b',\n  connector: { name: 'normal' },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.normal = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    id: 'a',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 100,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 500,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: 'a',\n    target: 'b',\n    connector: {\n      name: 'normal'\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"shape/connector/demo/rounded.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/rounded.ts","order":2,"filename":"rounded.ts","title":{"zh":"圆角连线","en":"Rounded Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Xre2RYCzIiUAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addNode({\n  id: 'a',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 100,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 500,\n  y: 300,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: 'a',\n  target: 'b',\n  connector: { name: 'rounded' },\n  vertices: [\n    { x: 300, y: 40 },\n    { x: 400, y: 40 },\n  ],\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.rounded = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    id: 'a',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 100,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 500,\n    y: 300,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: 'a',\n    target: 'b',\n    connector: {\n      name: 'rounded'\n    },\n    vertices: [{\n      x: 300,\n      y: 40\n    }, {\n      x: 400,\n      y: 40\n    }],\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"shape/connector/demo/smooth.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/smooth.ts","order":1,"filename":"smooth.ts","title":{"zh":"平滑连线","en":"Smooth Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*x4k3So2KAtwAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addNode({\n  id: 'a',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 100,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 500,\n  y: 300,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: 'a',\n  target: 'b',\n  connector: { name: 'smooth' },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.smooth = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    id: 'a',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 100,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 500,\n    y: 300,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: 'a',\n    target: 'b',\n    connector: {\n      name: 'smooth'\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"shape/connector/demo/wobble.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/wobble.ts","order":4,"filename":"wobble.ts","title":{"zh":"自定义连线","en":"Custom Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*zrRTSbn-uD0AAAAAAAAAAAAAARQnAQ","source":"import { Graph, Path, Point, Registry } from '@antv/x6'\n\nif (!Registry.Connector.registry.exist('wobble')) {\n  Graph.registerConnector(\n    'wobble',\n    (sourcePoint, targetPoint, vertices, args) => {\n      const spread = args.spread || 20\n      const points = [...vertices, targetPoint].map((p) => Point.create(p))\n      let prev = Point.create(sourcePoint)\n      const path = new Path(Path.createSegment('M', prev))\n\n      for (var i = 0, n = points.length; i < n; i += 1) {\n        const next = points[i]\n        const distance = prev.distance(next)\n        let d = spread\n\n        while (d < distance) {\n          var current = prev.clone().move(next, -d)\n          current.translate(\n            Math.floor(7 * Math.random()) - 3,\n            Math.floor(7 * Math.random()) - 3,\n          )\n          path.appendSegment(Path.createSegment('L', current))\n          d += spread\n        }\n\n        path.appendSegment(Path.createSegment('L', next))\n        prev = next\n      }\n\n      return path\n    },\n  )\n}\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: 10,\n})\n\nconst source = graph.addNode({\n  shape: 'rect',\n  x: 50,\n  y: 50,\n  width: 140,\n  height: 70,\n  attrs: {\n    label: { text: 'Source' },\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\nconst target = source.clone().translate(700, 400).attr('label/text', 'Target')\ngraph.addNode(target)\n\ngraph.addEdge({\n  source,\n  target,\n  shape: 'edge',\n  connector: {\n    name: 'wobble',\n    args: {\n      spread: 10,\n    },\n  },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.wobble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  if (!_x.Registry.Connector.registry.exist('wobble')) {\n    _x.Graph.registerConnector('wobble', function (sourcePoint, targetPoint, vertices, args) {\n      var spread = args.spread || 20;\n      var points = [].concat(_toConsumableArray(vertices), [targetPoint]).map(function (p) {\n        return _x.Point.create(p);\n      });\n\n      var prev = _x.Point.create(sourcePoint);\n\n      var path = new _x.Path(_x.Path.createSegment('M', prev));\n\n      for (var i = 0, n = points.length; i < n; i += 1) {\n        var next = points[i];\n        var distance = prev.distance(next);\n        var d = spread;\n\n        while (d < distance) {\n          var current = prev.clone().move(next, -d);\n          current.translate(Math.floor(7 * Math.random()) - 3, Math.floor(7 * Math.random()) - 3);\n          path.appendSegment(_x.Path.createSegment('L', current));\n          d += spread;\n        }\n\n        path.appendSegment(_x.Path.createSegment('L', next));\n        prev = next;\n      }\n\n      return path;\n    });\n  }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: 10\n  });\n  var source = graph.addNode({\n    shape: 'rect',\n    x: 50,\n    y: 50,\n    width: 140,\n    height: 70,\n    attrs: {\n      label: {\n        text: 'Source'\n      },\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  var target = source.clone().translate(700, 400).attr('label/text', 'Target');\n  graph.addNode(target);\n  graph.addEdge({\n    source: source,\n    target: target,\n    shape: 'edge',\n    connector: {\n      name: 'wobble',\n      args: {\n        spread: 10\n      }\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"interaction/updateEdge/demo/multi.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/updateEdge/demo/multi.ts","order":0,"filename":"multi.ts","title":{"zh":"动态设置顶点","en":"Dynamic Vertex"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*dCo7Q5sgv-cAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Edge, Line } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  mousewheel: true,\n  grid: true,\n})\n\nconst rect1 = graph.addNode({\n  x: 30,\n  y: 30,\n  width: 100,\n  height: 40,\n  label: 'hello',\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\nconst rect2 = graph.addNode({\n  x: 360,\n  y: 280,\n  width: 100,\n  height: 40,\n  label: 'world',\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\nconst total = 15\nconst edges: Edge[] = []\n\nfor (let i = 0; i < total; i += 1) {\n  edges.push(\n    graph.addEdge({\n      source: rect1,\n      target: rect2,\n      connector: {\n        name: 'smooth',\n      },\n      attrs: {\n        line: {\n          stroke: '#722ed1',\n        },\n      },\n    }),\n  )\n}\n\nconst update = () => {\n  const bbox1 = rect1.getBBox()\n  const bbox2 = rect2.getBBox()\n  const line = new Line(bbox1.getCenter(), bbox2.getCenter())\n  const mid = line.pointAt(0.5)\n  const odd = total % 2 === 1\n  const max = 0.2\n\n  let split = Math.floor(total / 2)\n  const factor = max / split\n  for (let i = 0; i < split; i += 1) {\n    const edge = edges[i]\n    const vertice = line.pointAt(0.5 - (i + 1) * factor).rotate(90, mid)\n    edge.setVertices([vertice])\n  }\n\n  if (odd) {\n    const edge = edges[split]\n    edge.removeConnector()\n    split += 1\n  }\n\n  for (let i = split; i < total; i += 1) {\n    const edge = edges[i]\n    const vertice = line.pointAt(0.5 + (i - split + 1) * factor).rotate(90, mid)\n    edge.setVertices([vertice])\n  }\n}\n\ngraph.on('node:change:position', update)\n\nupdate()\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.multi = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    mousewheel: true,\n    grid: true\n  });\n  var rect1 = graph.addNode({\n    x: 30,\n    y: 30,\n    width: 100,\n    height: 40,\n    label: 'hello',\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  var rect2 = graph.addNode({\n    x: 360,\n    y: 280,\n    width: 100,\n    height: 40,\n    label: 'world',\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  var total = 15;\n  var edges = [];\n\n  for (var i = 0; i < total; i += 1) {\n    edges.push(graph.addEdge({\n      source: rect1,\n      target: rect2,\n      connector: {\n        name: 'smooth'\n      },\n      attrs: {\n        line: {\n          stroke: '#722ed1'\n        }\n      }\n    }));\n  }\n\n  var update = function update() {\n    var bbox1 = rect1.getBBox();\n    var bbox2 = rect2.getBBox();\n    var line = new _x.Line(bbox1.getCenter(), bbox2.getCenter());\n    var mid = line.pointAt(0.5);\n    var odd = total % 2 === 1;\n    var max = 0.2;\n    var split = Math.floor(total / 2);\n    var factor = max / split;\n\n    for (var _i = 0; _i < split; _i += 1) {\n      var edge = edges[_i];\n      var vertice = line.pointAt(0.5 - (_i + 1) * factor).rotate(90, mid);\n      edge.setVertices([vertice]);\n    }\n\n    if (odd) {\n      var _edge = edges[split];\n\n      _edge.removeConnector();\n\n      split += 1;\n    }\n\n    for (var _i2 = split; _i2 < total; _i2 += 1) {\n      var _edge2 = edges[_i2];\n\n      var _vertice = line.pointAt(0.5 + (_i2 - split + 1) * factor).rotate(90, mid);\n\n      _edge2.setVertices([_vertice]);\n    }\n  };\n\n  graph.on('node:change:position', update);\n  update();\n});"},{"relativePath":"interaction/expand/demo/expand.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/expand/demo/expand.ts","order":0,"filename":"expand.ts","title":{"zh":"展开与收起","en":"Expand And Fold"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*gAXiQbep7-EAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Node } from '@antv/x6'\n\nclass Group extends Node {\n  private collapsed: boolean = false\n  private expandSize: { width: number; height: number }\n\n  protected postprocess() {\n    this.toggleCollapse(false)\n  }\n\n  isCollapsed() {\n    return this.collapsed === true\n  }\n\n  toggleCollapse(collapsed?: boolean) {\n    const target = collapsed == null ? !this.collapsed : collapsed\n    if (target) {\n      this.attr('buttonSign', { d: 'M 1 5 9 5 M 5 1 5 9' })\n      this.expandSize = this.getSize()\n      this.resize(100, 32)\n    } else {\n      this.attr('buttonSign', { d: 'M 2 5 8 5' })\n      if (this.expandSize) {\n        this.resize(this.expandSize.width, this.expandSize.height)\n      }\n    }\n    this.collapsed = target\n  }\n}\n\nGroup.config({\n  markup: [\n    {\n      tagName: 'rect',\n      selector: 'body',\n    },\n    {\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [\n        {\n          tagName: 'rect',\n          selector: 'button',\n          attrs: {\n            'pointer-events': 'visiblePainted',\n          },\n        },\n        {\n          tagName: 'path',\n          selector: 'buttonSign',\n          attrs: {\n            fill: 'none',\n            'pointer-events': 'none',\n          },\n        },\n      ],\n    },\n  ],\n  attrs: {\n    body: {\n      refWidth: '100%',\n      refHeight: '100%',\n      strokeWidth: 1,\n      fill: '#ffffff',\n      stroke: '#a0a0a0',\n    },\n    buttonGroup: {\n      refX: 8,\n      refY: 8,\n    },\n    button: {\n      height: 16,\n      width: 20,\n      rx: 2,\n      ry: 2,\n      fill: '#f5f5f5',\n      stroke: '#ccc',\n      cursor: 'pointer',\n      event: 'node:collapse',\n    },\n    buttonSign: {\n      refX: 5,\n      refY: 4,\n      stroke: '#808080',\n    },\n  },\n})\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: true,\n})\n\nconst createGroup = (\n  id: string,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  fill: string,\n) => {\n  const group = new Group({\n    id,\n    x,\n    y,\n    width,\n    height,\n    attrs: {\n      body: { fill },\n    },\n  })\n  graph.addNode(group)\n  return group\n}\n\nconst createNode = (\n  id: string,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  fill: string,\n) => {\n  return graph.addNode({\n    id,\n    x,\n    y,\n    width,\n    height,\n    attrs: {\n      body: {\n        fill: fill || 'blue',\n      },\n      label: {\n        text: id,\n        fill: 'white',\n        refX: 10,\n        refY: 10,\n        textAnchor: 'start',\n      },\n    },\n  })\n}\n\nconst createEdge = (\n  id: string,\n  source: string,\n  target: string,\n  vertices?: { x: number; y: number }[],\n) => {\n  return graph.addEdge({\n    id,\n    source,\n    target,\n    vertices: vertices,\n    label: id,\n  })\n}\n\nconst a = createGroup('a', 100, 30, 480, 320, '#ffd8bf')\nconst aa = createGroup('aa', 180, 80, 160, 140, '#ff9c6e')\nconst aaa = createGroup('aaa', 200, 120, 120, 40, '#5cdbd3')\nconst c = createNode('c', 450, 200, 50, 50, '#85a5ff')\n\na.addChild(aa)\naa.addChild(aaa)\na.addChild(c)\n\ncreateNode('d', 680, 80, 50, 50, '#b37feb')\n\ncreateEdge('l1', 'aa', 'c')\ncreateEdge('l3', 'c', 'd')\naa.addChild(\n  createEdge('l2', 'aa', 'aaa', [\n    { x: 50, y: 110 },\n    { x: 50, y: 180 },\n  ]),\n)\n\ngraph.on('node:collapse', ({ node }: { node: Group }) => {\n  node.toggleCollapse()\n  const collapsed = node.isCollapsed()\n  const cells = node.getDescendants()\n  cells.forEach((node) => {\n    if (collapsed) {\n      node.hide()\n    } else {\n      node.show()\n    }\n  })\n})\n\ngraph.on('react:collapse', ({ node }: { node: Node }) => {\n  const data = node.getData<any>() || {}\n  const collapsed = !(data.collapsed === true)\n  node.updateData({ collapsed })\n  node.resize(collapsed ? 80 : 160, collapsed ? 30 : 60)\n  const cells = node.getDescendants()\n  cells.forEach((node) => {\n    if (collapsed) {\n      node.hide()\n    } else {\n      node.show()\n    }\n  })\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.expand = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var Group = /*#__PURE__*/function (_Node) {\n    _inherits(Group, _Node);\n\n    var _super = _createSuper(Group);\n\n    function Group() {\n      var _this;\n\n      _classCallCheck(this, Group);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"collapsed\", false);\n\n      _defineProperty(_assertThisInitialized(_this), \"expandSize\", void 0);\n\n      return _this;\n    }\n\n    _createClass(Group, [{\n      key: \"postprocess\",\n      value: function postprocess() {\n        this.toggleCollapse(false);\n      }\n    }, {\n      key: \"isCollapsed\",\n      value: function isCollapsed() {\n        return this.collapsed === true;\n      }\n    }, {\n      key: \"toggleCollapse\",\n      value: function toggleCollapse(collapsed) {\n        var target = collapsed == null ? !this.collapsed : collapsed;\n\n        if (target) {\n          this.attr('buttonSign', {\n            d: 'M 1 5 9 5 M 5 1 5 9'\n          });\n          this.expandSize = this.getSize();\n          this.resize(100, 32);\n        } else {\n          this.attr('buttonSign', {\n            d: 'M 2 5 8 5'\n          });\n\n          if (this.expandSize) {\n            this.resize(this.expandSize.width, this.expandSize.height);\n          }\n        }\n\n        this.collapsed = target;\n      }\n    }]);\n\n    return Group;\n  }(_x.Node);\n\n  Group.config({\n    markup: [{\n      tagName: 'rect',\n      selector: 'body'\n    }, {\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [{\n        tagName: 'rect',\n        selector: 'button',\n        attrs: {\n          'pointer-events': 'visiblePainted'\n        }\n      }, {\n        tagName: 'path',\n        selector: 'buttonSign',\n        attrs: {\n          fill: 'none',\n          'pointer-events': 'none'\n        }\n      }]\n    }],\n    attrs: {\n      body: {\n        refWidth: '100%',\n        refHeight: '100%',\n        strokeWidth: 1,\n        fill: '#ffffff',\n        stroke: '#a0a0a0'\n      },\n      buttonGroup: {\n        refX: 8,\n        refY: 8\n      },\n      button: {\n        height: 16,\n        width: 20,\n        rx: 2,\n        ry: 2,\n        fill: '#f5f5f5',\n        stroke: '#ccc',\n        cursor: 'pointer',\n        event: 'node:collapse'\n      },\n      buttonSign: {\n        refX: 5,\n        refY: 4,\n        stroke: '#808080'\n      }\n    }\n  });\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n\n  var createGroup = function createGroup(id, x, y, width, height, fill) {\n    var group = new Group({\n      id: id,\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      attrs: {\n        body: {\n          fill: fill\n        }\n      }\n    });\n    graph.addNode(group);\n    return group;\n  };\n\n  var createNode = function createNode(id, x, y, width, height, fill) {\n    return graph.addNode({\n      id: id,\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      attrs: {\n        body: {\n          fill: fill || 'blue'\n        },\n        label: {\n          text: id,\n          fill: 'white',\n          refX: 10,\n          refY: 10,\n          textAnchor: 'start'\n        }\n      }\n    });\n  };\n\n  var createEdge = function createEdge(id, source, target, vertices) {\n    return graph.addEdge({\n      id: id,\n      source: source,\n      target: target,\n      vertices: vertices,\n      label: id\n    });\n  };\n\n  var a = createGroup('a', 100, 30, 480, 320, '#ffd8bf');\n  var aa = createGroup('aa', 180, 80, 160, 140, '#ff9c6e');\n  var aaa = createGroup('aaa', 200, 120, 120, 40, '#5cdbd3');\n  var c = createNode('c', 450, 200, 50, 50, '#85a5ff');\n  a.addChild(aa);\n  aa.addChild(aaa);\n  a.addChild(c);\n  createNode('d', 680, 80, 50, 50, '#b37feb');\n  createEdge('l1', 'aa', 'c');\n  createEdge('l3', 'c', 'd');\n  aa.addChild(createEdge('l2', 'aa', 'aaa', [{\n    x: 50,\n    y: 110\n  }, {\n    x: 50,\n    y: 180\n  }]));\n  graph.on('node:collapse', function (_ref) {\n    var node = _ref.node;\n    node.toggleCollapse();\n    var collapsed = node.isCollapsed();\n    var cells = node.getDescendants();\n    cells.forEach(function (node) {\n      if (collapsed) {\n        node.hide();\n      } else {\n        node.show();\n      }\n    });\n  });\n  graph.on('react:collapse', function (_ref2) {\n    var node = _ref2.node;\n    var data = node.getData() || {};\n    var collapsed = !(data.collapsed === true);\n    node.updateData({\n      collapsed: collapsed\n    });\n    node.resize(collapsed ? 80 : 160, collapsed ? 30 : 60);\n    var cells = node.getDescendants();\n    cells.forEach(function (node) {\n      if (collapsed) {\n        node.hide();\n      } else {\n        node.show();\n      }\n    });\n  });\n});"},{"relativePath":"interaction/ports/demo/validateConnection.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/ports/demo/validateConnection.ts","order":0,"filename":"validateConnection.ts","title":{"zh":"验证连接","en":"Validate Connection"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*USDYR65eJCMAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Edge, Shape, NodeView } from '@antv/x6'\n\nclass MyShape extends Shape.Rect {\n  getInPorts() {\n    return this.getPortsByGroup('in')\n  }\n\n  getOutPorts() {\n    return this.getPortsByGroup('out')\n  }\n\n  getUsedInPorts(graph: Graph) {\n    const incomingEdges = graph.getIncomingEdges(this) || []\n    return incomingEdges.map((edge: Edge) => {\n      const portId = edge.getTargetPortId()\n      return this.getPort(portId!)\n    })\n  }\n\n  getNewInPorts(length: number) {\n    return Array.from({ length }, () => {\n      return { group: 'in' }\n    })\n  }\n\n  updateInPorts(graph: Graph) {\n    var minNumberOfPorts = 2\n    var ports = this.getInPorts()\n    var usedPorts = this.getUsedInPorts(graph)\n    var newPorts = this.getNewInPorts(\n      Math.max(minNumberOfPorts - usedPorts.length, 1),\n    )\n\n    if (\n      ports.length === minNumberOfPorts &&\n      ports.length - usedPorts.length > 0\n    ) {\n      // noop\n    } else if (ports.length === usedPorts.length) {\n      this.addPorts(newPorts)\n    } else if (ports.length + 1 > usedPorts.length) {\n      this.prop(\n        ['ports', 'items'],\n        this.getOutPorts().concat(usedPorts).concat(newPorts),\n        { rewrite: true },\n      )\n    }\n\n    return this\n  }\n}\n\nMyShape.config({\n  attrs: {\n    root: {\n      magnet: false,\n    },\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n  },\n  ports: {\n    items: [{ group: 'out' }],\n    groups: {\n      in: {\n        position: { name: 'top' },\n        attrs: {\n          portBody: {\n            magnet: 'passive',\n            r: 12,\n            cy: -4,\n            fill: '#b37feb',\n            stroke: '#9254de',\n          },\n        },\n        z: 0,\n      },\n      out: {\n        position: { name: 'bottom' },\n        attrs: {\n          portBody: {\n            magnet: 'active',\n            r: 12,\n            cy: 4,\n            fill: '#69c0ff',\n            stroke: '#40a9ff',\n          },\n        },\n        z: 0,\n      },\n    },\n  },\n  portMarkup: [\n    {\n      tagName: 'circle',\n      selector: 'portBody',\n    },\n  ],\n})\n\nconst magnetAvailabilityHighlighter = {\n  name: 'stroke',\n  args: {\n    padding: 6,\n    attrs: {\n      strokeWidth: 3,\n      stroke: '#ff0000',\n    },\n  },\n}\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  highlighting: {\n    magnetAvailable: magnetAvailabilityHighlighter,\n  },\n  connecting: {\n    snap: true,\n    dangling: false,\n    highlight: true,\n    connector: 'rounded',\n    router: {\n      name: 'er',\n      args: {\n        // direction: 'W',\n      },\n    },\n    connectionPoint: 'boundary',\n    createEdge() {\n      return new Shape.Edge()\n    },\n    validateConnection({ sourceView, targetView, targetMagnet }) {\n      if (!targetMagnet) {\n        return false\n      }\n\n      if (sourceView === targetView) {\n        return false\n      }\n\n      if (targetMagnet.getAttribute('port-group') !== 'in') {\n        return false\n      }\n\n      if (targetView) {\n        const node = targetView.cell\n        if (node instanceof MyShape) {\n          var portId = targetMagnet.getAttribute('port')\n          var usedInPorts = node.getUsedInPorts(graph)\n          if (usedInPorts.find((port) => port && port.id === portId)) {\n            return false\n          }\n        }\n      }\n\n      return true\n    },\n  },\n})\n\ngraph.addNode(\n  new MyShape().resize(120, 100).position(200, 100).updateInPorts(graph),\n)\n\ngraph.addNode(\n  new MyShape().resize(120, 100).position(400, 100).updateInPorts(graph),\n)\n\ngraph.addNode(\n  new MyShape().resize(120, 100).position(300, 400).updateInPorts(graph),\n)\n\nfunction update(view: NodeView) {\n  var cell = view.cell\n  if (cell instanceof MyShape) {\n    cell.getInPorts().forEach((port) => {\n      var portNode = view.findPortElem(port.id!, 'portBody')\n      view.unhighlight(portNode, {\n        highlighter: magnetAvailabilityHighlighter,\n      })\n    })\n    cell.updateInPorts(graph)\n  }\n}\n\ngraph.on('edge:mouseenter', ({ view }) => {\n  view.addTools({\n    tools: [\n      'source-arrowhead',\n      'target-arrowhead',\n      {\n        name: 'button-remove',\n        args: {\n          distance: -30,\n        },\n      },\n    ],\n  })\n})\n\ngraph.on('edge:mouseleave', ({ view }) => {\n  view.removeTools()\n})\n\ngraph.on('edge:connected', ({ previousView, currentView }) => {\n  if (previousView) {\n    update(previousView)\n  }\n  if (currentView) {\n    update(currentView)\n  }\n})\n\ngraph.on('edge:removed', function ({ edge, options }) {\n  if (!options.ui) {\n    return\n  }\n\n  var target = edge.getTargetCell()\n  if (target instanceof MyShape) {\n    target.updateInPorts()\n  }\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.validateConnection = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  var MyShape = /*#__PURE__*/function (_Shape$Rect) {\n    _inherits(MyShape, _Shape$Rect);\n\n    var _super = _createSuper(MyShape);\n\n    function MyShape() {\n      _classCallCheck(this, MyShape);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(MyShape, [{\n      key: \"getInPorts\",\n      value: function getInPorts() {\n        return this.getPortsByGroup('in');\n      }\n    }, {\n      key: \"getOutPorts\",\n      value: function getOutPorts() {\n        return this.getPortsByGroup('out');\n      }\n    }, {\n      key: \"getUsedInPorts\",\n      value: function getUsedInPorts(graph) {\n        var _this = this;\n\n        var incomingEdges = graph.getIncomingEdges(this) || [];\n        return incomingEdges.map(function (edge) {\n          var portId = edge.getTargetPortId();\n          return _this.getPort(portId);\n        });\n      }\n    }, {\n      key: \"getNewInPorts\",\n      value: function getNewInPorts(length) {\n        return Array.from({\n          length: length\n        }, function () {\n          return {\n            group: 'in'\n          };\n        });\n      }\n    }, {\n      key: \"updateInPorts\",\n      value: function updateInPorts(graph) {\n        var minNumberOfPorts = 2;\n        var ports = this.getInPorts();\n        var usedPorts = this.getUsedInPorts(graph);\n        var newPorts = this.getNewInPorts(Math.max(minNumberOfPorts - usedPorts.length, 1));\n\n        if (ports.length === minNumberOfPorts && ports.length - usedPorts.length > 0) {// noop\n        } else if (ports.length === usedPorts.length) {\n          this.addPorts(newPorts);\n        } else if (ports.length + 1 > usedPorts.length) {\n          this.prop(['ports', 'items'], this.getOutPorts().concat(usedPorts).concat(newPorts), {\n            rewrite: true\n          });\n        }\n\n        return this;\n      }\n    }]);\n\n    return MyShape;\n  }(_x.Shape.Rect);\n\n  MyShape.config({\n    attrs: {\n      root: {\n        magnet: false\n      },\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      }\n    },\n    ports: {\n      items: [{\n        group: 'out'\n      }],\n      groups: {\n        in: {\n          position: {\n            name: 'top'\n          },\n          attrs: {\n            portBody: {\n              magnet: 'passive',\n              r: 12,\n              cy: -4,\n              fill: '#b37feb',\n              stroke: '#9254de'\n            }\n          },\n          z: 0\n        },\n        out: {\n          position: {\n            name: 'bottom'\n          },\n          attrs: {\n            portBody: {\n              magnet: 'active',\n              r: 12,\n              cy: 4,\n              fill: '#69c0ff',\n              stroke: '#40a9ff'\n            }\n          },\n          z: 0\n        }\n      }\n    },\n    portMarkup: [{\n      tagName: 'circle',\n      selector: 'portBody'\n    }]\n  });\n  var magnetAvailabilityHighlighter = {\n    name: 'stroke',\n    args: {\n      padding: 6,\n      attrs: {\n        strokeWidth: 3,\n        stroke: '#ff0000'\n      }\n    }\n  };\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    highlighting: {\n      magnetAvailable: magnetAvailabilityHighlighter\n    },\n    connecting: {\n      snap: true,\n      dangling: false,\n      highlight: true,\n      connector: 'rounded',\n      router: {\n        name: 'er',\n        args: {// direction: 'W',\n        }\n      },\n      connectionPoint: 'boundary',\n      createEdge: function createEdge() {\n        return new _x.Shape.Edge();\n      },\n      validateConnection: function validateConnection(_ref) {\n        var sourceView = _ref.sourceView,\n            targetView = _ref.targetView,\n            targetMagnet = _ref.targetMagnet;\n\n        if (!targetMagnet) {\n          return false;\n        }\n\n        if (sourceView === targetView) {\n          return false;\n        }\n\n        if (targetMagnet.getAttribute('port-group') !== 'in') {\n          return false;\n        }\n\n        if (targetView) {\n          var node = targetView.cell;\n\n          if (_instanceof(node, MyShape)) {\n            var portId = targetMagnet.getAttribute('port');\n            var usedInPorts = node.getUsedInPorts(graph);\n\n            if (usedInPorts.find(function (port) {\n              return port && port.id === portId;\n            })) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n    }\n  });\n  graph.addNode(new MyShape().resize(120, 100).position(200, 100).updateInPorts(graph));\n  graph.addNode(new MyShape().resize(120, 100).position(400, 100).updateInPorts(graph));\n  graph.addNode(new MyShape().resize(120, 100).position(300, 400).updateInPorts(graph));\n\n  function update(view) {\n    var cell = view.cell;\n\n    if (_instanceof(cell, MyShape)) {\n      cell.getInPorts().forEach(function (port) {\n        var portNode = view.findPortElem(port.id, 'portBody');\n        view.unhighlight(portNode, {\n          highlighter: magnetAvailabilityHighlighter\n        });\n      });\n      cell.updateInPorts(graph);\n    }\n  }\n\n  graph.on('edge:mouseenter', function (_ref2) {\n    var view = _ref2.view;\n    view.addTools({\n      tools: ['source-arrowhead', 'target-arrowhead', {\n        name: 'button-remove',\n        args: {\n          distance: -30\n        }\n      }]\n    });\n  });\n  graph.on('edge:mouseleave', function (_ref3) {\n    var view = _ref3.view;\n    view.removeTools();\n  });\n  graph.on('edge:connected', function (_ref4) {\n    var previousView = _ref4.previousView,\n        currentView = _ref4.currentView;\n\n    if (previousView) {\n      update(previousView);\n    }\n\n    if (currentView) {\n      update(currentView);\n    }\n  });\n  graph.on('edge:removed', function (_ref5) {\n    var edge = _ref5.edge,\n        options = _ref5.options;\n\n    if (!options.ui) {\n      return;\n    }\n\n    var target = edge.getTargetCell();\n\n    if (_instanceof(target, MyShape)) {\n      target.updateInPorts();\n    }\n  });\n});"},{"relativePath":"interaction/embeding/demo/embed.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/embeding/demo/embed.ts","order":0,"filename":"embed.ts","title":{"zh":"节点嵌入","en":"Node Embending"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Tq6WQJFB9KUAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Shape, Node } from '@antv/x6'\n\nconst Parent = Shape.Rect.define({\n  customEmebedding: true,\n  attrs: {\n    body: { stroke: 'transparent', fill: '#531dab', rx: 5, ry: 5 },\n    label: { fontSize: 14, text: 'Parent', fill: 'white' },\n  },\n})\n\nconst Child = Shape.Rect.define({\n  attrs: {\n    body: { stroke: 'transparent', fill: '#389e0d', rx: 5, ry: 5 },\n    label: { fontSize: 14, text: 'child1', fill: 'white' },\n  },\n})\n\nif (!Node.registry.exist('embedding.parent')) {\n  Node.registry.register('embedding.parent', Parent)\n}\nif (!Node.registry.exist('embedding.child')) {\n  Node.registry.register('embedding.child', Child)\n}\n\nconst container = document.getElementById('container')!\nconst EMBEDDING_OFFSET = 59\nconst graph = new Graph({\n  container: container,\n  grid: {\n    size: 20,\n    type: 'mesh',\n  },\n  embedding: {\n    enabled: true,\n    findParent({ node }) {\n      var bbox = node.getBBox()\n      return this.getNodes().filter((node: Node) => {\n        var currentBBox = node.getBBox()\n        if (node.getProp('customEmebedding')) {\n          var children = node.getChildren() || []\n          if (children.length) {\n            var rect = this.getCellsBBox(children)\n            if (rect) {\n              currentBBox.height += rect.height\n              currentBBox.y -= rect.height\n            }\n          }\n\n          currentBBox.y -= EMBEDDING_OFFSET\n          currentBBox.height += EMBEDDING_OFFSET\n        }\n\n        return bbox.isIntersectWithRect(currentBBox)\n      })\n    },\n  },\n})\n\ngraph.addNode({\n  shape: 'embedding.parent',\n  size: { width: 160, height: 100 },\n  position: { x: 240, y: 400 },\n})\n\ngraph.addNode({\n  shape: 'embedding.child',\n  size: { width: 160, height: 100 },\n  position: { x: 20, y: 120 },\n  attrs: {\n    body: { fill: '#cf1322' },\n    label: { text: 'Try to move me\\n above the \\n \"Parent\" element' },\n  },\n})\n\ngraph.addNode({\n  shape: 'embedding.child',\n  size: { width: 160, height: 100 },\n  position: { x: 20, y: 240 },\n  attrs: {\n    body: { fill: '#096dd9' },\n    label: { text: 'Try to move me\\n above the \\n \"Parent\" element' },\n  },\n})\n\ngraph.addNode({\n  shape: 'embedding.child',\n  size: { width: 160, height: 100 },\n  position: { x: 20, y: 360 },\n  attrs: {\n    body: { fill: '#08979c' },\n    label: { text: 'Try to move me\\n above the \\n \"Parent\" element' },\n  },\n})\n\nvar r = new Child({\n  attrs: {\n    body: { fill: '#d4380d' },\n    label: { text: 'Embedded!' },\n  },\n})\n  .setPosition(600, 120)\n  .setSize(160, 100)\n\nvar g = new Child({\n  attrs: {\n    body: { fill: '#08979c' },\n    label: { text: 'Embedded!' },\n  },\n})\n  .setPosition(660, 240)\n  .setSize(160, 100)\n\nvar b = new Child({\n  attrs: {\n    body: { fill: '#08979c' },\n    label: { text: 'Embedded!' },\n  },\n})\n  .setPosition(600, 360)\n  .setSize(160, 100)\n\nnew Parent({\n  attrs: {\n    label: { text: 'Parent\\n(try to move me)' },\n  },\n})\n  .setPosition(640, 480)\n  .setSize(160, 100)\n  .addChild(r)\n  .addChild(g)\n  .addChild(b)\n  .addTo(graph.model)\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.embed = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var Parent = _x.Shape.Rect.define({\n    customEmebedding: true,\n    attrs: {\n      body: {\n        stroke: 'transparent',\n        fill: '#531dab',\n        rx: 5,\n        ry: 5\n      },\n      label: {\n        fontSize: 14,\n        text: 'Parent',\n        fill: 'white'\n      }\n    }\n  });\n\n  var Child = _x.Shape.Rect.define({\n    attrs: {\n      body: {\n        stroke: 'transparent',\n        fill: '#389e0d',\n        rx: 5,\n        ry: 5\n      },\n      label: {\n        fontSize: 14,\n        text: 'child1',\n        fill: 'white'\n      }\n    }\n  });\n\n  if (!_x.Node.registry.exist('embedding.parent')) {\n    _x.Node.registry.register('embedding.parent', Parent);\n  }\n\n  if (!_x.Node.registry.exist('embedding.child')) {\n    _x.Node.registry.register('embedding.child', Child);\n  }\n\n  var container = document.getElementById('container');\n  var EMBEDDING_OFFSET = 59;\n  var graph = new _x.Graph({\n    container: container,\n    grid: {\n      size: 20,\n      type: 'mesh'\n    },\n    embedding: {\n      enabled: true,\n      findParent: function findParent(_ref) {\n        var _this = this;\n\n        var node = _ref.node;\n        var bbox = node.getBBox();\n        return this.getNodes().filter(function (node) {\n          var currentBBox = node.getBBox();\n\n          if (node.getProp('customEmebedding')) {\n            var children = node.getChildren() || [];\n\n            if (children.length) {\n              var rect = _this.getCellsBBox(children);\n\n              if (rect) {\n                currentBBox.height += rect.height;\n                currentBBox.y -= rect.height;\n              }\n            }\n\n            currentBBox.y -= EMBEDDING_OFFSET;\n            currentBBox.height += EMBEDDING_OFFSET;\n          }\n\n          return bbox.isIntersectWithRect(currentBBox);\n        });\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'embedding.parent',\n    size: {\n      width: 160,\n      height: 100\n    },\n    position: {\n      x: 240,\n      y: 400\n    }\n  });\n  graph.addNode({\n    shape: 'embedding.child',\n    size: {\n      width: 160,\n      height: 100\n    },\n    position: {\n      x: 20,\n      y: 120\n    },\n    attrs: {\n      body: {\n        fill: '#cf1322'\n      },\n      label: {\n        text: 'Try to move me\\n above the \\n \"Parent\" element'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'embedding.child',\n    size: {\n      width: 160,\n      height: 100\n    },\n    position: {\n      x: 20,\n      y: 240\n    },\n    attrs: {\n      body: {\n        fill: '#096dd9'\n      },\n      label: {\n        text: 'Try to move me\\n above the \\n \"Parent\" element'\n      }\n    }\n  });\n  graph.addNode({\n    shape: 'embedding.child',\n    size: {\n      width: 160,\n      height: 100\n    },\n    position: {\n      x: 20,\n      y: 360\n    },\n    attrs: {\n      body: {\n        fill: '#08979c'\n      },\n      label: {\n        text: 'Try to move me\\n above the \\n \"Parent\" element'\n      }\n    }\n  });\n  var r = new Child({\n    attrs: {\n      body: {\n        fill: '#d4380d'\n      },\n      label: {\n        text: 'Embedded!'\n      }\n    }\n  }).setPosition(600, 120).setSize(160, 100);\n  var g = new Child({\n    attrs: {\n      body: {\n        fill: '#08979c'\n      },\n      label: {\n        text: 'Embedded!'\n      }\n    }\n  }).setPosition(660, 240).setSize(160, 100);\n  var b = new Child({\n    attrs: {\n      body: {\n        fill: '#08979c'\n      },\n      label: {\n        text: 'Embedded!'\n      }\n    }\n  }).setPosition(600, 360).setSize(160, 100);\n  new Parent({\n    attrs: {\n      label: {\n        text: 'Parent\\n(try to move me)'\n      }\n    }\n  }).setPosition(640, 480).setSize(160, 100).addChild(r).addChild(g).addChild(b).addTo(graph.model);\n});"}]}},"staticQueryHashes":["1015175297","3000541721","3000541721","3378097331"]}