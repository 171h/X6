{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/tree/mindmap","result":{"data":{"site":{"siteMetadata":{"title":"X6","examples":[{"slug":"shape","icon":"shape","title":{"zh":"元素","en":"Shape"}},{"slug":"interaction","icon":"interaction","title":{"zh":"交互","en":"Interaction"}},{"slug":"net","icon":"net","title":{"zh":"一般图","en":"General Graph"}},{"slug":"tree","icon":"tree","title":{"zh":"树图","en":"Tree Graph"}},{"slug":"animation","icon":"scatter","title":{"zh":"动画","en":"Animation"}},{"slug":"tool","icon":"tool","title":{"zh":"组件","en":"Component"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/nodes"},"frontmatter":{"title":"内置节点","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"shape/nodes/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/tool/scroller"},"frontmatter":{"title":"滚动画布","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tool/scroller/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap"},"frontmatter":{"title":"脑图树","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tree/mindmap/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/updateEdge"},"frontmatter":{"title":"动态更新边","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/updateEdge/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/edges"},"frontmatter":{"title":"内置边","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edges/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/tool/snapline"},"frontmatter":{"title":"对齐线","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tool/snapline/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/embeding"},"frontmatter":{"title":"节点嵌入","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/embeding/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/marker"},"frontmatter":{"title":"内置箭头","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"shape/marker/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/expand"},"frontmatter":{"title":"展开与收起","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/expand/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/connector"},"frontmatter":{"title":"连接器","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"shape/connector/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/ports"},"frontmatter":{"title":"连接桩交互","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/ports/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/router"},"frontmatter":{"title":"内置路由","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"shape/router/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/customRouter"},"frontmatter":{"title":"自定义路由","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"shape/customRouter/index.zh.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"shape/connector/demo/jumpover.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/jumpover.ts","order":0,"filename":"jumpover.ts","title":{"zh":"跳线连接器","en":"JumpOver Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*wT7jQbXyWMMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"连接器","order":104}}},{"relativePath":"shape/connector/demo/wobble.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/connector/demo/wobble.ts","order":1,"filename":"wobble.ts","title":{"zh":"自定义连接器","en":"Custom Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*aHBGSqLpuxEAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"连接器","order":104}}},{"relativePath":"shape/customRouter/demo/router.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/customRouter/demo/router.ts","order":0,"filename":"router.ts","title":{"zh":"随机路由","en":"Random Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*F2a6T7KDNDcAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"自定义路由","order":107}}},{"relativePath":"shape/edges/demo/edge.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/edges/demo/edge.ts","order":0,"filename":"edge.ts","title":{"zh":"默认边","en":"Default Edge"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*0dmTSbR1tXgAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置边","order":102}}},{"relativePath":"shape/marker/demo/marker.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/marker/demo/marker.ts","order":0,"filename":"marker.ts","title":{"zh":"内置箭头","en":"Marker"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*aM9nRo9pJqQAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置箭头","order":103}}},{"relativePath":"shape/nodes/demo/circle.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/circle.ts","order":2,"filename":"circle.ts","title":{"zh":"圆形","en":"Circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*NmA4T4g-mtoAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/html.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/html.ts","order":4,"filename":"html.ts","title":{"zh":"HTML","en":"HTML"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*NCDiSr2QOjgAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/ellipse.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/ellipse.ts","order":1,"filename":"ellipse.ts","title":{"zh":"椭圆","en":"Ellipse"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*_JLoQLqc-w8AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/image.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/image.ts","order":3,"filename":"image.ts","title":{"zh":"图片","en":"Image"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*YmP5Q5fww5cAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/nodes/demo/rect.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/nodes/demo/rect.ts","order":0,"filename":"rect.ts","title":{"zh":"矩形","en":"Rectangle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*FemfTZ4c1MoAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101}}},{"relativePath":"shape/router/demo/orth.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/shape/router/demo/orth.ts","order":0,"filename":"orth.ts","title":{"zh":"正交路由","en":"Orth Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*YulsS6FVHtYAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置路由","order":105}}},{"relativePath":"tool/scroller/demo/scroller.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tool/scroller/demo/scroller.ts","order":0,"filename":"scroller.ts","title":{"zh":"滚动画布","en":"Scroller"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*b1dwRYukeCMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"滚动画布","order":601}}},{"relativePath":"tool/snapline/demo/snapline.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tool/snapline/demo/snapline.ts","order":0,"filename":"snapline.ts","title":{"zh":"对齐线","en":"Snapline"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*AABsRIDATzEAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"对齐线","order":602}}},{"relativePath":"tree/mindmap/demo/tree.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tree/mindmap/demo/tree.ts","order":0,"filename":"tree.ts","title":{"zh":"脑图树","en":"Mindmap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*bZ3tTITjafsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"脑图树","order":401}}},{"relativePath":"interaction/embeding/demo/embed.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/embeding/demo/embed.ts","order":0,"filename":"embed.ts","title":{"zh":"节点嵌入","en":"Node Embending"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*SEp0Sb7NrMUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"节点嵌入","order":202}}},{"relativePath":"interaction/expand/demo/expand.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/expand/demo/expand.ts","order":0,"filename":"expand.ts","title":{"zh":"展开与收起","en":"Expand And Fold"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*HcLnTLEsOU4AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"展开与收起","order":203}}},{"relativePath":"interaction/updateEdge/demo/multi.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/updateEdge/demo/multi.ts","order":0,"filename":"multi.ts","title":{"zh":"动态设置顶点","en":"Dynamic Vertex"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*4CFARJ6cqBsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"动态更新边","order":201}}},{"relativePath":"interaction/ports/demo/validateConnection.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/interaction/ports/demo/validateConnection.ts","order":0,"filename":"validateConnection.ts","title":{"zh":"验证连接","en":"Validate Connection"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*sgJrRp63Tx0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"连接桩交互","order":204}}}],"exampleSections":{"examples":[{"relativePath":"tree/mindmap/demo/tree.ts","absolutePath":"/home/runner/work/X6/X6/sites/x6-sites/examples/tree/mindmap/demo/tree.ts","order":0,"filename":"tree.ts","title":{"zh":"脑图树","en":"Mindmap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*bZ3tTITjafsAAAAAAAAAAAAAARQnAQ","source":"import { Graph, Node, Edge, Shape } from '@antv/x6'\n\nclass TreeNode extends Node {\n  private collapsed: boolean = false\n\n  protected postprocess() {\n    this.toggleCollapse(false)\n  }\n\n  isCollapsed() {\n    return this.collapsed === true\n  }\n\n  toggleButtonVisibility(visible: boolean) {\n    this.attr('buttonGroup', { display: visible ? 'block' : 'none' })\n  }\n\n  toggleCollapse(collapsed: boolean) {\n    const target = collapsed == null ? !this.collapsed : collapsed\n    if (!target) {\n      this.attr('buttonSign', { d: 'M 1 5 9 5 M 5 1 5 9', strokeWidth: 1.6 })\n    } else {\n      this.attr('buttonSign', { d: 'M 2 5 8 5', strokeWidth: 1.8 })\n    }\n    this.collapsed = target\n  }\n}\n\nTreeNode.config({\n  zIndex: 2,\n  markup: [\n    {\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [\n        {\n          tagName: 'rect',\n          selector: 'button',\n          attrs: {\n            'pointer-events': 'visiblePainted',\n          },\n        },\n        {\n          tagName: 'path',\n          selector: 'buttonSign',\n          attrs: {\n            fill: 'none',\n            'pointer-events': 'none',\n          },\n        },\n      ],\n    },\n    {\n      tagName: 'rect',\n      selector: 'body',\n    },\n    {\n      tagName: 'text',\n      selector: 'label',\n    },\n  ],\n  attrs: {\n    body: {\n      refWidth: '100%',\n      refHeight: '100%',\n      strokeWidth: 1,\n      fill: '#ffffff',\n      stroke: '#a0a0a0',\n    },\n    label: {\n      textWrap: {\n        ellipsis: true,\n        width: -10,\n      },\n      textAnchor: 'middle',\n      textVerticalAnchor: 'middle',\n      refX: '50%',\n      refY: '50%',\n      fontSize: 12,\n    },\n    buttonGroup: {\n      refX: '100%',\n      refY: '50%',\n    },\n    button: {\n      fill: '#4C65DD',\n      stroke: 'none',\n      x: -10,\n      y: -10,\n      height: 20,\n      width: 30,\n      rx: 10,\n      ry: 10,\n      cursor: 'pointer',\n      event: 'node:collapse',\n    },\n    buttonSign: {\n      refX: 5,\n      refY: -5,\n      stroke: '#FFFFFF',\n      strokeWidth: 1.6,\n    },\n  },\n})\n\nclass TreeEdge extends Shape.Edge {\n  isHidden() {\n    var node = this.getTargetNode() as TreeNode\n    return !node || !node.isVisible()\n  }\n}\n\nTreeEdge.config({\n  zIndex: 1,\n  attrs: {\n    line: {\n      stroke: '#a0a0a0',\n      strokeWidth: 1,\n      targetMarker: null,\n    },\n  },\n})\n\nif (Node.registry.exist('tree-node')) {\n  Node.registry.register('tree-node', TreeNode as typeof Node)\n}\nif (Edge.registry.exist('tree-edge')) {\n  Edge.registry.register('tree-edge', TreeEdge as typeof Edge)\n}\n\nconst container = document.getElementById('container')!\nconst graph = new Graph({\n  container: container,\n  frozen: true,\n  async: true,\n  interacting: false,\n  grid: 1,\n  sorting: 'approx',\n  background: {\n    color: '#F3F7F6',\n  },\n  scroller: {\n    enabled: true,\n  },\n  connecting: {\n    anchor: 'orth',\n    connectionPoint: 'boundary',\n    router: {\n      name: 'er',\n      args: {\n        direction: 'H',\n      },\n    },\n  },\n})\ngraph.zoomTo(0.8)\n\nfetch('../data/mindmap.json')\n  .then((response) => response.json())\n  .then((data) => {\n    var start = new Date().getTime()\n    const nodes = data.nodes.map(({ leaf, ...metadata }: any) => {\n      const node = new TreeNode(metadata)\n      if (leaf) {\n        node.toggleButtonVisibility(leaf === false)\n      }\n      return node\n    })\n    const edges = data.edges.map(\n      (edge: any) =>\n        new TreeEdge({\n          source: edge.source,\n          target: edge.target,\n        }),\n    )\n    graph.resetCells([...nodes, ...edges])\n\n    graph.unfreeze({\n      progress({ done }) {\n        if (done) {\n          const time = new Date().getTime() - start\n          console.log(time)\n          graph.unfreeze({\n            batchSize: 50,\n          })\n        }\n      },\n    })\n    graph.on('node:collapse', ({ node }) => {\n      const treeNode = node as TreeNode\n      treeNode.toggleCollapse()\n      const collapsed = treeNode.isCollapsed()\n      const nodes = graph.getSuccessors(node) as TreeNode[]\n      nodes.forEach((node) => {\n        node.toggleVisible(collapsed)\n      })\n    })\n  })\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.tree = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n  function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var TreeNode = /*#__PURE__*/function (_Node) {\n    _inherits(TreeNode, _Node);\n\n    var _super = _createSuper(TreeNode);\n\n    function TreeNode() {\n      var _this;\n\n      _classCallCheck(this, TreeNode);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"collapsed\", false);\n\n      return _this;\n    }\n\n    _createClass(TreeNode, [{\n      key: \"postprocess\",\n      value: function postprocess() {\n        this.toggleCollapse(false);\n      }\n    }, {\n      key: \"isCollapsed\",\n      value: function isCollapsed() {\n        return this.collapsed === true;\n      }\n    }, {\n      key: \"toggleButtonVisibility\",\n      value: function toggleButtonVisibility(visible) {\n        this.attr('buttonGroup', {\n          display: visible ? 'block' : 'none'\n        });\n      }\n    }, {\n      key: \"toggleCollapse\",\n      value: function toggleCollapse(collapsed) {\n        var target = collapsed == null ? !this.collapsed : collapsed;\n\n        if (!target) {\n          this.attr('buttonSign', {\n            d: 'M 1 5 9 5 M 5 1 5 9',\n            strokeWidth: 1.6\n          });\n        } else {\n          this.attr('buttonSign', {\n            d: 'M 2 5 8 5',\n            strokeWidth: 1.8\n          });\n        }\n\n        this.collapsed = target;\n      }\n    }]);\n\n    return TreeNode;\n  }(_x.Node);\n\n  TreeNode.config({\n    zIndex: 2,\n    markup: [{\n      tagName: 'g',\n      selector: 'buttonGroup',\n      children: [{\n        tagName: 'rect',\n        selector: 'button',\n        attrs: {\n          'pointer-events': 'visiblePainted'\n        }\n      }, {\n        tagName: 'path',\n        selector: 'buttonSign',\n        attrs: {\n          fill: 'none',\n          'pointer-events': 'none'\n        }\n      }]\n    }, {\n      tagName: 'rect',\n      selector: 'body'\n    }, {\n      tagName: 'text',\n      selector: 'label'\n    }],\n    attrs: {\n      body: {\n        refWidth: '100%',\n        refHeight: '100%',\n        strokeWidth: 1,\n        fill: '#ffffff',\n        stroke: '#a0a0a0'\n      },\n      label: {\n        textWrap: {\n          ellipsis: true,\n          width: -10\n        },\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle',\n        refX: '50%',\n        refY: '50%',\n        fontSize: 12\n      },\n      buttonGroup: {\n        refX: '100%',\n        refY: '50%'\n      },\n      button: {\n        fill: '#4C65DD',\n        stroke: 'none',\n        x: -10,\n        y: -10,\n        height: 20,\n        width: 30,\n        rx: 10,\n        ry: 10,\n        cursor: 'pointer',\n        event: 'node:collapse'\n      },\n      buttonSign: {\n        refX: 5,\n        refY: -5,\n        stroke: '#FFFFFF',\n        strokeWidth: 1.6\n      }\n    }\n  });\n\n  var TreeEdge = /*#__PURE__*/function (_Shape$Edge) {\n    _inherits(TreeEdge, _Shape$Edge);\n\n    var _super2 = _createSuper(TreeEdge);\n\n    function TreeEdge() {\n      _classCallCheck(this, TreeEdge);\n\n      return _super2.apply(this, arguments);\n    }\n\n    _createClass(TreeEdge, [{\n      key: \"isHidden\",\n      value: function isHidden() {\n        var node = this.getTargetNode();\n        return !node || !node.isVisible();\n      }\n    }]);\n\n    return TreeEdge;\n  }(_x.Shape.Edge);\n\n  TreeEdge.config({\n    zIndex: 1,\n    attrs: {\n      line: {\n        stroke: '#a0a0a0',\n        strokeWidth: 1,\n        targetMarker: null\n      }\n    }\n  });\n\n  if (_x.Node.registry.exist('tree-node')) {\n    _x.Node.registry.register('tree-node', TreeNode);\n  }\n\n  if (_x.Edge.registry.exist('tree-edge')) {\n    _x.Edge.registry.register('tree-edge', TreeEdge);\n  }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    frozen: true,\n    async: true,\n    interacting: false,\n    grid: 1,\n    sorting: 'approx',\n    background: {\n      color: '#F3F7F6'\n    },\n    scroller: {\n      enabled: true\n    },\n    connecting: {\n      anchor: 'orth',\n      connectionPoint: 'boundary',\n      router: {\n        name: 'er',\n        args: {\n          direction: 'H'\n        }\n      }\n    }\n  });\n  graph.zoomTo(0.8);\n  fetch('../data/mindmap.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var start = new Date().getTime();\n    var nodes = data.nodes.map(function (_ref) {\n      var leaf = _ref.leaf,\n          metadata = _objectWithoutProperties(_ref, [\"leaf\"]);\n\n      var node = new TreeNode(metadata);\n\n      if (leaf) {\n        node.toggleButtonVisibility(leaf === false);\n      }\n\n      return node;\n    });\n    var edges = data.edges.map(function (edge) {\n      return new TreeEdge({\n        source: edge.source,\n        target: edge.target\n      });\n    });\n    graph.resetCells([].concat(_toConsumableArray(nodes), _toConsumableArray(edges)));\n    graph.unfreeze({\n      progress: function progress(_ref2) {\n        var done = _ref2.done;\n\n        if (done) {\n          var time = new Date().getTime() - start;\n          console.log(time);\n          graph.unfreeze({\n            batchSize: 50\n          });\n        }\n      }\n    });\n    graph.on('node:collapse', function (_ref3) {\n      var node = _ref3.node;\n      var treeNode = node;\n      treeNode.toggleCollapse();\n      var collapsed = treeNode.isCollapsed();\n      var nodes = graph.getSuccessors(node);\n      nodes.forEach(function (node) {\n        node.toggleVisible(collapsed);\n      });\n    });\n  });\n});"}]},"description":""}},"staticQueryHashes":["1015175297","2195934284","3000541721","3000541721","653731124"]}