{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/shape/connector","result":{"data":{"site":{"siteMetadata":{"title":"X6","examples":[{"slug":"shape","icon":"shape","title":{"zh":"元素","en":"Shape"}},{"slug":"interaction","icon":"interaction","title":{"zh":"交互","en":"Interaction"}},{"slug":"net","icon":"net","title":{"zh":"一般图","en":"General Graph"}},{"slug":"tree","icon":"tree","title":{"zh":"树图","en":"Tree Graph"}},{"slug":"animation","icon":"scatter","title":{"zh":"动画","en":"Animation"}},{"slug":"tool","icon":"tool","title":{"zh":"组件","en":"Component"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap"},"frontmatter":{"title":"脑图树","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tree/mindmap/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap"},"frontmatter":{"title":"MindMap","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tree/mindmap/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/tool/scroller"},"frontmatter":{"title":"Scroller","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tool/scroller/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tool/scroller"},"frontmatter":{"title":"滚动画布","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"tool/scroller/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/nodes"},"frontmatter":{"title":"内置节点","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"shape/nodes/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/nodes"},"frontmatter":{"title":"Built-in Node","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"shape/nodes/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/updateEdge"},"frontmatter":{"title":"动态更新边","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/updateEdge/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/updateEdge"},"frontmatter":{"title":"Update Edge","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/updateEdge/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/tool/snapline"},"frontmatter":{"title":"对齐线","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tool/snapline/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/tool/snapline"},"frontmatter":{"title":"Snapline","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tool/snapline/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/edges"},"frontmatter":{"title":"Built-in Edge","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edges/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/edges"},"frontmatter":{"title":"内置边","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edges/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/embeding"},"frontmatter":{"title":"Embeding","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/embeding/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/embeding"},"frontmatter":{"title":"节点嵌入","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/embeding/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/marker"},"frontmatter":{"title":"Built-in Marker","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"shape/marker/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/marker"},"frontmatter":{"title":"内置箭头","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"shape/marker/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/expand"},"frontmatter":{"title":"Expand And Fold","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/expand/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/expand"},"frontmatter":{"title":"展开与收起","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/expand/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/connector"},"frontmatter":{"title":"Connector","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"shape/connector/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/connector"},"frontmatter":{"title":"连线","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"shape/connector/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/ports"},"frontmatter":{"title":"Port Interaction","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/ports/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/ports"},"frontmatter":{"title":"连接桩交互","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/ports/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/router"},"frontmatter":{"title":"路由","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"shape/router/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/shape/router"},"frontmatter":{"title":"Router","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"shape/router/index.en.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"tree/mindmap/demo/tree.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/tree/mindmap/demo/tree.ts","order":0,"filename":"tree.ts","title":{"zh":"脑图树","en":"Mindmap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*bZ3tTITjafsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"脑图树","order":401},"en":{"title":"MindMap","order":401}}},{"relativePath":"tool/snapline/demo/snapline.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/tool/snapline/demo/snapline.ts","order":0,"filename":"snapline.ts","title":{"zh":"对齐线","en":"Snapline"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*cmi1SJ112qIAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"对齐线","order":602},"en":{"title":"Snapline","order":602}}},{"relativePath":"tool/scroller/demo/scroller.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/tool/scroller/demo/scroller.ts","order":0,"filename":"scroller.ts","title":{"zh":"滚动画布","en":"Scroller"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*l_BLQJiDIYkAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Scroller","order":601},"zh":{"title":"滚动画布","order":601}}},{"relativePath":"shape/router/demo/customRouter.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/customRouter.ts","order":6,"filename":"customRouter.ts","title":{"zh":"随机路由","en":"Random Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*L3C-TrM4lG0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/router/demo/er.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/er.ts","order":5,"filename":"er.ts","title":{"zh":"ER路由","en":"ER Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*iE8MS6-xgZMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/router/demo/manhattan.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/manhattan.ts","order":3,"filename":"manhattan.ts","title":{"zh":"曼哈顿路由","en":"Manhattan Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*FXGRQ5RmLyMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/router/demo/orth.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/orth.ts","order":1,"filename":"orth.ts","title":{"zh":"正交路由","en":"Orth Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*2fRdRaP2JBUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/router/demo/normal.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"默认路由","en":"Normal Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*KdkFTJ-sP6YAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/router/demo/metro.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/metro.ts","order":4,"filename":"metro.ts","title":{"zh":"铁路路由","en":"Metro Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*ABPIT5s-yh4AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/router/demo/oneSide.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/router/demo/oneSide.ts","order":2,"filename":"oneSide.ts","title":{"zh":"OneSide","en":"OneSide Router"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*622fTp6J8twAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"路由","order":105},"en":{"title":"Router","order":105}}},{"relativePath":"shape/nodes/demo/html.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/html.ts","order":4,"filename":"html.ts","title":{"zh":"HTML","en":"HTML"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*9RRESpvzfMIAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101},"en":{"title":"Built-in Node","order":101}}},{"relativePath":"shape/nodes/demo/ellipse.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/ellipse.ts","order":1,"filename":"ellipse.ts","title":{"zh":"椭圆","en":"Ellipse"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*xzAvR6eQe6sAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101},"en":{"title":"Built-in Node","order":101}}},{"relativePath":"shape/nodes/demo/circle.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/circle.ts","order":2,"filename":"circle.ts","title":{"zh":"圆形","en":"Circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*pffdSKADueQAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101},"en":{"title":"Built-in Node","order":101}}},{"relativePath":"shape/nodes/demo/image.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/image.ts","order":3,"filename":"image.ts","title":{"zh":"图片","en":"Image"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*YmP5Q5fww5cAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101},"en":{"title":"Built-in Node","order":101}}},{"relativePath":"shape/marker/demo/marker.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/marker/demo/marker.ts","order":0,"filename":"marker.ts","title":{"zh":"基础箭头","en":"Basic Marker"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*nGtbTYeXGgUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Marker","order":103},"zh":{"title":"内置箭头","order":103}}},{"relativePath":"shape/nodes/demo/rect.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/nodes/demo/rect.ts","order":0,"filename":"rect.ts","title":{"zh":"矩形","en":"Rectangle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*3rFwR6gDxSMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"内置节点","order":101},"en":{"title":"Built-in Node","order":101}}},{"relativePath":"shape/edges/demo/edge.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/edges/demo/edge.ts","order":0,"filename":"edge.ts","title":{"zh":"默认边","en":"Default Edge"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Z-LXQKuFXxwAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Built-in Edge","order":102},"zh":{"title":"内置边","order":102}}},{"relativePath":"shape/connector/demo/jumpover.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/jumpover.ts","order":3,"filename":"jumpover.ts","title":{"zh":"跳线","en":"JumpOver Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Gbu3R5fVQC4AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/normal.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"正常连线","en":"Normal Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*HwCJRawjuCAAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/smooth.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/smooth.ts","order":1,"filename":"smooth.ts","title":{"zh":"平滑连线","en":"Smooth Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*x4k3So2KAtwAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/wobble.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/wobble.ts","order":4,"filename":"wobble.ts","title":{"zh":"自定义连线","en":"Custom Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*zrRTSbn-uD0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"shape/connector/demo/rounded.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/rounded.ts","order":2,"filename":"rounded.ts","title":{"zh":"圆角连线","en":"Rounded Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Xre2RYCzIiUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Connector","order":104},"zh":{"title":"连线","order":104}}},{"relativePath":"interaction/updateEdge/demo/multi.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/updateEdge/demo/multi.ts","order":0,"filename":"multi.ts","title":{"zh":"动态设置顶点","en":"Dynamic Vertex"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*dCo7Q5sgv-cAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"动态更新边","order":201},"en":{"title":"Update Edge","order":201}}},{"relativePath":"interaction/ports/demo/validateConnection.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/ports/demo/validateConnection.ts","order":0,"filename":"validateConnection.ts","title":{"zh":"验证连接","en":"Validate Connection"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*USDYR65eJCMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Port Interaction","order":204},"zh":{"title":"连接桩交互","order":204}}},{"relativePath":"interaction/expand/demo/expand.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/expand/demo/expand.ts","order":0,"filename":"expand.ts","title":{"zh":"展开与收起","en":"Expand And Fold"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*gAXiQbep7-EAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Expand And Fold","order":203},"zh":{"title":"展开与收起","order":203}}},{"relativePath":"interaction/embeding/demo/embed.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/interaction/embeding/demo/embed.ts","order":0,"filename":"embed.ts","title":{"zh":"节点嵌入","en":"Node Embending"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Tq6WQJFB9KUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Embeding","order":202},"zh":{"title":"节点嵌入","order":202}}}],"exampleSections":{"examples":[{"relativePath":"shape/connector/demo/normal.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/normal.ts","order":0,"filename":"normal.ts","title":{"zh":"正常连线","en":"Normal Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*HwCJRawjuCAAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addNode({\n  id: 'a',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 100,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 500,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: 'a',\n  target: 'b',\n  connector: { name: 'normal' },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.normal = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    id: 'a',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 100,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 500,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: 'a',\n    target: 'b',\n    connector: {\n      name: 'normal'\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"shape/connector/demo/smooth.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/smooth.ts","order":1,"filename":"smooth.ts","title":{"zh":"平滑连线","en":"Smooth Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*x4k3So2KAtwAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addNode({\n  id: 'a',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 100,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 500,\n  y: 300,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: 'a',\n  target: 'b',\n  connector: { name: 'smooth' },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.smooth = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    id: 'a',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 100,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 500,\n    y: 300,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: 'a',\n    target: 'b',\n    connector: {\n      name: 'smooth'\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"shape/connector/demo/rounded.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/rounded.ts","order":2,"filename":"rounded.ts","title":{"zh":"圆角连线","en":"Rounded Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Xre2RYCzIiUAAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container,\n  grid: true,\n})\n\ngraph.addNode({\n  id: 'a',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 100,\n  y: 100,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addNode({\n  id: 'b',\n  shape: 'rect',\n  width: 160,\n  height: 80,\n  x: 500,\n  y: 300,\n  attrs: {\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\ngraph.addEdge({\n  source: 'a',\n  target: 'b',\n  connector: { name: 'rounded' },\n  vertices: [\n    { x: 300, y: 40 },\n    { x: 400, y: 40 },\n  ],\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.rounded = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: true\n  });\n  graph.addNode({\n    id: 'a',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 100,\n    y: 100,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addNode({\n    id: 'b',\n    shape: 'rect',\n    width: 160,\n    height: 80,\n    x: 500,\n    y: 300,\n    attrs: {\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  graph.addEdge({\n    source: 'a',\n    target: 'b',\n    connector: {\n      name: 'rounded'\n    },\n    vertices: [{\n      x: 300,\n      y: 40\n    }, {\n      x: 400,\n      y: 40\n    }],\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"},{"relativePath":"shape/connector/demo/jumpover.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/jumpover.ts","order":3,"filename":"jumpover.ts","title":{"zh":"跳线","en":"JumpOver Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*Gbu3R5fVQC4AAAAAAAAAAAAAARQnAQ","source":"import { Graph } from '@antv/x6'\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: 10,\n})\n\nconst rect = graph.createNode({\n  x: 100,\n  y: 50,\n  width: 70,\n  height: 30,\n  attrs: {\n    body: {\n      fill: '#ff7875',\n      stroke: '#ff4d4f',\n    },\n    label: {\n      text: 'rect',\n      magnet: true,\n      fill: '#ffffff',\n    },\n  },\n})\n\nfor (let i = 0; i < 6; i++) {\n  const source = rect.clone().translate(i * 100, i * 10)\n  graph.addNode(source)\n\n  const target = source.clone().translate(0, 200)\n  graph.addNode(target)\n\n  const edge = graph.createEdge({\n    source,\n    target,\n  })\n\n  if (i % 2 === 0) {\n    edge.prop('connector', {\n      name: 'jumpover',\n      args: { type: 'gap' },\n    })\n    edge.attr('line/stroke', '#722ed1')\n  }\n\n  graph.addEdge(edge)\n}\n\nconst crossRectA = rect.clone().position(16, 100)\ngraph.addNode(crossRectA)\n\nconst crossRectB = rect.clone().position(16, 200)\ngraph.addNode(crossRectB)\n\ngraph.addEdge({\n  source: crossRectA,\n  target: crossRectB,\n  connector: { name: 'jumpover' },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n  vertices: [\n    { x: 700, y: 190 },\n    { x: 700, y: 280 },\n  ],\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.jumpover = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: 10\n  });\n  var rect = graph.createNode({\n    x: 100,\n    y: 50,\n    width: 70,\n    height: 30,\n    attrs: {\n      body: {\n        fill: '#ff7875',\n        stroke: '#ff4d4f'\n      },\n      label: {\n        text: 'rect',\n        magnet: true,\n        fill: '#ffffff'\n      }\n    }\n  });\n\n  for (var i = 0; i < 6; i++) {\n    var source = rect.clone().translate(i * 100, i * 10);\n    graph.addNode(source);\n    var target = source.clone().translate(0, 200);\n    graph.addNode(target);\n    var edge = graph.createEdge({\n      source: source,\n      target: target\n    });\n\n    if (i % 2 === 0) {\n      edge.prop('connector', {\n        name: 'jumpover',\n        args: {\n          type: 'gap'\n        }\n      });\n      edge.attr('line/stroke', '#722ed1');\n    }\n\n    graph.addEdge(edge);\n  }\n\n  var crossRectA = rect.clone().position(16, 100);\n  graph.addNode(crossRectA);\n  var crossRectB = rect.clone().position(16, 200);\n  graph.addNode(crossRectB);\n  graph.addEdge({\n    source: crossRectA,\n    target: crossRectB,\n    connector: {\n      name: 'jumpover'\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    },\n    vertices: [{\n      x: 700,\n      y: 190\n    }, {\n      x: 700,\n      y: 280\n    }]\n  });\n});"},{"relativePath":"shape/connector/demo/wobble.ts","absolutePath":"/Users/wenyu/vector/code/AntV/X6/sites/x6-sites/examples/shape/connector/demo/wobble.ts","order":4,"filename":"wobble.ts","title":{"zh":"自定义连线","en":"Custom Connector"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*zrRTSbn-uD0AAAAAAAAAAAAAARQnAQ","source":"import { Graph, Path, Point, Registry } from '@antv/x6'\n\nif (!Registry.Connector.registry.exist('wobble')) {\n  Graph.registerConnector(\n    'wobble',\n    (sourcePoint, targetPoint, vertices, args) => {\n      const spread = args.spread || 20\n      const points = [...vertices, targetPoint].map((p) => Point.create(p))\n      let prev = Point.create(sourcePoint)\n      const path = new Path(Path.createSegment('M', prev))\n\n      for (var i = 0, n = points.length; i < n; i += 1) {\n        const next = points[i]\n        const distance = prev.distance(next)\n        let d = spread\n\n        while (d < distance) {\n          var current = prev.clone().move(next, -d)\n          current.translate(\n            Math.floor(7 * Math.random()) - 3,\n            Math.floor(7 * Math.random()) - 3,\n          )\n          path.appendSegment(Path.createSegment('L', current))\n          d += spread\n        }\n\n        path.appendSegment(Path.createSegment('L', next))\n        prev = next\n      }\n\n      return path\n    },\n  )\n}\n\nconst container = document.getElementById('container')\nconst graph = new Graph({\n  container: container,\n  grid: 10,\n})\n\nconst source = graph.addNode({\n  shape: 'rect',\n  x: 50,\n  y: 50,\n  width: 140,\n  height: 70,\n  attrs: {\n    label: { text: 'Source' },\n    body: {\n      fill: '#ff9c6e',\n      stroke: '#ff7a45',\n    },\n    text: {\n      fill: '#ffffff',\n    },\n  },\n})\n\nconst target = source.clone().translate(700, 400).attr('label/text', 'Target')\ngraph.addNode(target)\n\ngraph.addEdge({\n  source,\n  target,\n  shape: 'edge',\n  connector: {\n    name: 'wobble',\n    args: {\n      spread: 10,\n    },\n  },\n  attrs: {\n    line: {\n      stroke: '#722ed1',\n    },\n  },\n})\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/x6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/x6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.x6);\n    global.wobble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_x) {\n  \"use strict\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  if (!_x.Registry.Connector.registry.exist('wobble')) {\n    _x.Graph.registerConnector('wobble', function (sourcePoint, targetPoint, vertices, args) {\n      var spread = args.spread || 20;\n      var points = [].concat(_toConsumableArray(vertices), [targetPoint]).map(function (p) {\n        return _x.Point.create(p);\n      });\n\n      var prev = _x.Point.create(sourcePoint);\n\n      var path = new _x.Path(_x.Path.createSegment('M', prev));\n\n      for (var i = 0, n = points.length; i < n; i += 1) {\n        var next = points[i];\n        var distance = prev.distance(next);\n        var d = spread;\n\n        while (d < distance) {\n          var current = prev.clone().move(next, -d);\n          current.translate(Math.floor(7 * Math.random()) - 3, Math.floor(7 * Math.random()) - 3);\n          path.appendSegment(_x.Path.createSegment('L', current));\n          d += spread;\n        }\n\n        path.appendSegment(_x.Path.createSegment('L', next));\n        prev = next;\n      }\n\n      return path;\n    });\n  }\n\n  var container = document.getElementById('container');\n  var graph = new _x.Graph({\n    container: container,\n    grid: 10\n  });\n  var source = graph.addNode({\n    shape: 'rect',\n    x: 50,\n    y: 50,\n    width: 140,\n    height: 70,\n    attrs: {\n      label: {\n        text: 'Source'\n      },\n      body: {\n        fill: '#ff9c6e',\n        stroke: '#ff7a45'\n      },\n      text: {\n        fill: '#ffffff'\n      }\n    }\n  });\n  var target = source.clone().translate(700, 400).attr('label/text', 'Target');\n  graph.addNode(target);\n  graph.addEdge({\n    source: source,\n    target: target,\n    shape: 'edge',\n    connector: {\n      name: 'wobble',\n      args: {\n        spread: 10\n      }\n    },\n    attrs: {\n      line: {\n        stroke: '#722ed1'\n      }\n    }\n  });\n});"}]},"description":""}},"staticQueryHashes":["1015175297","3000541721","3000541721","3378097331","638047554"]}